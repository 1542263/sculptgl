function Aabb(){this.min_=[0,0,0];this.max_=[0,0,0]}
Aabb.prototype={clone:function(){var a=new Aabb;a.min_=this.min_.slice();a.max_=this.max_.slice();return a},copy:function(a){vec3.copy(this.min_,a.min_);vec3.copy(this.max_,a.max_);return this},setCopy:function(a,b){vec3.copy(this.min_,a);vec3.copy(this.max_,b);return this},set:function(a,b,c,e,g,d){var h=this.min_,f=this.max_;h[0]=a;h[1]=b;h[2]=c;f[0]=e;f[1]=g;f[2]=d;return this},computeCenter:function(){var a=[0,0,0];return vec3.scale(a,vec3.add(a,this.min_,this.max_),0.5)},isOutside:function(a){var b=
this.min_,c=this.max_,e=a.min_;a=a.max_;return e[0]>c[0]||a[0]<b[0]||e[1]>c[1]||a[1]<b[1]||e[2]>c[2]||a[2]<b[2]?!0:!1},isInside:function(a){var b=this.min_,c=this.max_,e=a.min_;a=a.max_;return b[0]>=e[0]&&c[0]<=a[0]&&b[1]>=e[1]&&c[1]<=a[1]&&b[2]>=e[2]&&c[2]<=a[2]?!0:!1},pointInside:function(a){var b=this.min_,c=this.max_,e=a[0],g=a[1];a=a[2];return e<=b[0]||e>c[0]||g<=b[1]||g>c[1]||a<=b[2]||a>c[2]?!1:!0},expandsWithPoint:function(a,b,c){var e=this.min_,g=this.max_;a>g[0]&&(g[0]=a);a<e[0]&&(e[0]=a);
b>g[1]&&(g[1]=b);b<e[1]&&(e[1]=b);c>g[2]&&(g[2]=c);c<e[2]&&(e[2]=c)},expandsWithAabb:function(a){var b=this.min_,c=this.max_,e=a.min_,g=a.max_;a=e[0];var d=e[1],e=e[2],h=g[0],f=g[1],g=g[2];h>c[0]&&(c[0]=h);a<b[0]&&(b[0]=a);f>c[1]&&(c[1]=f);d<b[1]&&(b[1]=d);g>c[2]&&(c[2]=g);e<b[2]&&(b[2]=e)},intersectRay:function(a,b){var c=this.min_,e=this.max_,g=b[0],d=b[1],h=b[2],f=a[0],k=a[1],l=a[2],m=(c[0]-f)*g,g=(e[0]-f)*g,f=(c[1]-k)*d,d=(e[1]-k)*d,c=(c[2]-l)*h,h=(e[2]-l)*h,e=Math.max(Math.max(Math.min(m,g),
Math.min(f,d)),Math.min(c,h)),m=Math.min(Math.min(Math.max(m,g),Math.max(f,d)),Math.max(c,h));return 0<=m&&e<m},intersectSphere:function(a,b){var c=this.min_,e=this.max_,g=a[0],d=a[1],h=a[2],f=[0,0,0];f[0]=c[0]>g?c[0]:e[0]<g?e[0]:g;f[1]=c[1]>d?c[1]:e[1]<d?e[1]:d;f[2]=c[2]>h?c[2]:e[2]<h?e[2]:h;return vec3.sqrDist(a,f)<b},enlargeIfFlat:function(a){var b=this.min_,c=this.max_;b[0]===c[0]&&(b[0]-=a,c[0]+=a);b[1]===c[1]&&(b[1]-=a,c[1]+=a);b[2]===c[2]&&(b[2]-=a,c[2]+=a)}};function Camera(){this.mode_=Camera.mode.PLANE;this.rot_=quat.create();this.view_=mat4.create();this.proj_=mat4.create();this.lastNormalizedMouseXY_=[0,0];this.height_=this.width_=0;this.zoom_=20;this.transX_=1E-5;this.transY_=0;this.globalScale_=1;this.moveZ_=this.moveX_=0}Camera.mode={SPHERICAL:0,PLANE:1};
Camera.prototype={updateMode:function(a){this.mode_=a;this.rot_=quat.create();a=this.globalScale_;this.reset();this.globalScale_=a;this.zoom(-0.4)},start:function(a,b){this.lastNormalizedMouseXY_=Geometry.normalizedMouse(a,b,this.width_,this.height_)},rotate:function(a,b){var c=Geometry.normalizedMouse(a,b,this.width_,this.height_);if(this.mode_===Camera.mode.PLANE){var e=vec2.dist(this.lastNormalizedMouseXY_,c),g=[0,0];vec2.sub(g,c,this.lastNormalizedMouseXY_);g=[-g[1],g[0],0];vec3.normalize(g,g);
quat.mul(this.rot_,quat.setAxisAngle([0,0,0,0],g,2*e),this.rot_)}else if(this.mode_===Camera.mode.SPHERICAL){var e=Geometry.mouseOnUnitSphere(this.lastNormalizedMouseXY_),g=Geometry.mouseOnUnitSphere(c),d=Math.acos(Math.min(1,vec3.dot(e,g))),h=[0,0,0];vec3.normalize(h,vec3.cross(h,e,g));quat.mul(this.rot_,quat.setAxisAngle([0,0,0,0],h,2*d),this.rot_)}this.lastNormalizedMouseXY_=c},updateView:function(){var a=this.view_,b=this.transX_,c=this.transY_;mat4.lookAt(a,[b,c,this.zoom_],[b,c,0],[0,1,0]);
b=mat4.create();mat4.fromQuat(b,this.rot_);mat4.mul(a,a,b)},updateProjection:function(){this.proj_=mat4.create();mat4.perspective(this.proj_,1.222,this.width_/this.height_,0.01,1E5)},updateTranslation:function(){this.transX_+=this.moveX_*this.globalScale_/400;this.zoom_=Math.max(1E-5,this.zoom_+this.moveZ_*this.globalScale_/400)},translate:function(a,b){this.transX_-=a*this.globalScale_;this.transY_+=b*this.globalScale_},zoom:function(a){this.zoom_=Math.max(1E-5,this.zoom_-a*this.globalScale_)},reset:function(){this.rot_=
quat.create();this.zoom_=0;this.transX_=1E-5;this.transY_=0;this.globalScale_=1}};var Files={loadOBJ:function(a,b){for(var c=b.vertices_,e=b.triangles_,g=[],d=[],h=a.split("\n"),f=[],k=h.length,l=0;l<k;++l){var m=h[l],m=m.trim();if(m.startsWith("v "))f=m.split(/\s+/),c.push(new Vertex(c.length)),g.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3]));else if(m.startsWith("f ")){var f=m.split(/\s+/),m=f[1].split("/"),n=f[2].split("/"),p=f[3].split("/"),m=parseInt(m[0],10),q=parseInt(n[0],10),p=parseInt(p[0],10),r=c.length;0>m?(m+=r,q+=r,p+=r):(--m,--q,--p);var n=c[m],s=c[q],
u=c[p],v=e.length;n.tIndices_.push(v);s.tIndices_.push(v);u.tIndices_.push(v);e.push(new Triangle(v));d.push(m,q,p);4<f.length&&(++v,f=parseInt(f[4].split("/")[0],10),0>f?f+=r:--f,q=c[f],n.tIndices_.push(v),u.tIndices_.push(v),q.tIndices_.push(v),e.push(new Triangle(v)),d.push(m,p,f))}}b.vertexArray_=new Float32Array(2*g.length);b.normalArray_=new Float32Array(2*g.length);b.indexArray_=new SculptGL.indexArrayType(2*d.length);b.vertexArray_.set(g);b.indexArray_.set(d)},exportOBJ:function(a){var b=
a.vertexArray_,c=a.indexArray_,e="s 0\n",g=a.vertices_.length;a=a.triangles_.length;for(var d=0,h=0,d=0;d<g;++d)h=3*d,e+="v "+b[h]+" "+b[h+1]+" "+b[h+2]+"\n";for(d=0;d<a;++d)h=3*d,e+="f "+(1+c[h])+" "+(1+c[h+1])+" "+(1+c[h+2])+"\n";return e}};var Geometry={normalizedMouse:function(a,b,c,e){return[2*a/c-1,1-2*b/e]},mouseOnUnitSphere:function(a){var b=a[0];a=a[1];var c=1-b*b-a*a,c=0<c?Math.sqrt(c):0,b=[b,a,c];return vec3.normalize(b,b)},intersectionRayTriangle:function(a,b,c,e,g,d,h){var f=[0,0,0];vec3.sub(f,a,c);var k=vec3.dot(f,d),l=vec3.dot(vec3.sub(f,b,c),d);if(0<=k*l||k===l)return!1;vec3.scaleAndAdd(h,a,vec3.sub(f,b,a),-k/(l-k));a=[0,0,0];vec3.cross(a,d,vec3.sub(f,e,c));if(0>vec3.dot(a,vec3.sub(f,h,c)))return!1;vec3.cross(a,d,vec3.sub(f,
g,e));if(0>vec3.dot(a,vec3.sub(f,h,e)))return!1;vec3.cross(a,d,vec3.sub(f,c,g));return 0>vec3.dot(a,vec3.sub(f,h,c))?!1:!0},unproject:function(a,b,c,e,g,d,h){a=[2*a/d-1,2*b/h-1,2*c-1,1];b=mat4.create();vec4.transformMat4(a,a,mat4.invert(b,mat4.mul(b,g,e)));e=a[3];return[a[0]/e,a[1]/e,a[2]/e]},project:function(a,b,c,e,g,d,h){a=[a,b,c,1];vec4.transformMat4(a,a,e);vec4.transformMat4(a,a,g);e=a[3];return[0.5*(a[0]/e+1)*d,h-0.5*(a[1]/e+1)*h,0.5*(a[2]/e+1)]},point2Dto3D:function(a,b,c,e){return Geometry.unproject(b,
a.height_-c,e,a.view_,a.proj_,a.width_,a.height_)},point3Dto2D:function(a,b){return Geometry.project(b[0],b[1],b[2],a.view_,a.proj_,a.width_,a.height_)},computeTriangleAabb:function(a,b,c,e,g,d,h,f,k,l){var m=Math.min(b,g,f),n=Math.min(c,d,k),p=Math.min(e,h,l);b=Math.max(b,g,f);c=Math.max(c,d,k);e=Math.max(e,h,l);h=a.min_;a=a.max_;h[0]=m;h[1]=n;h[2]=p;a[0]=b;a[1]=c;a[2]=e},normal:function(a,b,c,e,g,d,h,f,k,l){g-=b;d-=c;h-=e;b=f-b;c=k-c;f=l-e;k=l=e=0;e=d*f-h*c;l=h*b-g*f;k=g*c-d*b;g=e*e+l*l+k*k;0!==
g&&(g=1/Math.sqrt(g),a[0]=e*g,a[1]=l*g,a[2]=k*g)},pointInsideTriangle:function(a,b,c,e){var g=[0,0,0];vec3.sub(g,b,c);var d=[0,0,0];vec3.sub(d,b,e);b=[0,0,0];vec3.sub(b,a,c);c=[0,0,0];vec3.sub(c,a,e);e=[0,0,0];a=vec3.len(vec3.cross(e,g,d));g=vec3.len(vec3.cross(e,g,b));d=vec3.len(vec3.cross(e,d,c));b=vec3.len(vec3.cross(e,b,c));return 1E-4>Math.abs(a-(g+d+b))?!0:!1},sphereIntersectTriangle:function(a,b,c,e,g){return Geometry.distanceToSegment(a,c,e)<b||Geometry.distanceToSegment(a,e,g)<b||Geometry.distanceToSegment(a,
c,g)<b?!0:!1},distanceToSegment:function(a,b,c){var e=[0,0,0];vec3.sub(e,a,b);var g=[0,0,0];vec3.sub(g,c,b);var d=vec3.sqrLen(g),d=vec3.dot(e,g)/d;if(0>d)return vec3.sqrLen(e);if(1<d)return vec3.sqrLen(vec3.sub(e,a,c));e[0]=a[0]-b[0]+d*g[0];e[1]=a[1]-b[1]+d*g[1];e[2]=a[2]-b[2]+d*g[2];return vec3.sqrLen(e)},signedAngle2d:function(a,b){var c=a[0],e=a[1],g=b[0],d=b[1];return Math.atan2(c*d-e*g,c*g+e*d)}};function Grid(){this.aabb_=new Aabb;this.size_=this.cellSize_=this.dimZ_=this.dimY_=this.dimX_=0;this.iVerts_=[]}
Grid.prototype={setBoundaries:function(a){var b=[0,0,0];vec3.sub(b,a.max_,a.min_);vec3.scale(b,b,0.1);vec3.sub(a.min_,a.min_,b);vec3.add(a.max_,a.max_,b);this.aabb_=a},init:function(a){this.cellSize_=a;var b=this.aabb_,c=[0,0,0];vec3.sub(c,b.max_,b.min_);var b=Math.ceil(c[0]/a),e=Math.ceil(c[1]/a);a=Math.ceil(c[2]/a);0>=b&&(b=1);0>=e&&(e=1);0>=a&&(a=1);var c=this.size_=1+b*e*a,g=this.iVerts_;g.length=c;for(var d=0;d<c;++d)g[d]=[];this.dimX_=b;this.dimY_=e;this.dimZ_=a},build:function(a,b){for(var c=
a.vertexArray_,e=this.aabb_.min_,g=this.dimX_,d=g*this.dimY_,h=0,f=0,k=0,l=0,k=0,m=this.cellSize_,n=this.size_,p=this.iVerts_,q=b.length,l=0;l<q;++l){var r=b[l],k=3*r,h=Math.floor((c[k]-e[0])/m),f=Math.floor((c[k+1]-e[1])/m),k=Math.floor((c[k+2]-e[2])/m),h=h+f*g+k*d;0>h?h=0:h>=n&&(h=n-1);p[h].push(r)}},getNeighborhood:function(a,b,c){var e=this.aabb_.min_,g=this.cellSize_,d=this.dimX_,h=this.dimY_,f=this.dimZ_,k=d*this.dimY_;a=Math.floor((a-e[0])/g);b=Math.floor((b-e[1])/g);c=Math.floor((c-e[2])/
g);0>a?a=0:a>=d&&(a=d-1);0>b?b=0:b>=h&&(b=h-1);0>c?c=0:c>=f&&(c=f-1);var l=g=e=-1,m=1,n=1,p=1;0>=a&&(e=0);a>=d-1&&(m=0);0>=b&&(g=0);b>=h-1&&(n=0);0>=c&&(l=0);c>=f-1&&(p=0);for(var q=f=h=0,r=this.iVerts_,s=[],h=e;h<=m;++h)for(f=g;f<=n;++f)for(q=l;q<=p;++q)s.push.apply(s,r[a+h+(b+f)*d+(c+q)*k]);return s}};function Mesh(a){this.vertices_=[];this.triangles_=[];this.indexArray_=this.normalArray_=this.vertexArray_=null;this.center_=[0,0,0];this.octree_=new Octree;this.matTransform_=mat4.create();this.leavesUpdate_=[];this.render_=new Render(a)}Mesh.globalScale_=500;Mesh.stateMask_=1;
Mesh.prototype={getTrianglesFromVertices:function(a){for(var b=++Triangle.tagMask_,c=[],e=a.length,g=this.vertices_,d=this.triangles_,h=0;h<e;++h)for(var f=g[a[h]].tIndices_,k=f.length,l=0;l<k;++l){var m=f[l];d[m].tagFlag_!==b&&(c.push(m),d[m].tagFlag_=b)}return c},getVerticesFromTriangles:function(a){for(var b=++Vertex.tagMask_,c=[],e=a.length,g=this.vertices_,d=this.indexArray_,h=0;h<e;++h){var f=3*a[h],k=d[f],l=d[f+1],f=d[f+2];g[k].tagFlag_!==b&&(c.push(k),g[k].tagFlag_=b);g[l].tagFlag_!==b&&(c.push(l),
g[l].tagFlag_=b);g[f].tagFlag_!==b&&(c.push(f),g[f].tagFlag_=b)}return c},expandsTriangles:function(a,b){for(var c=++Triangle.tagMask_,e=a.length,g=this.vertices_,d=this.triangles_,h=this.indexArray_,f=0,k=0,f=0;f<e;++f)d[a[f]].tagFlag_=c;for(f=0;b;){for(--b;f<e;++f){for(var k=3*a[f],l=g[h[k]].tIndices_,m=g[h[k+1]].tIndices_,n=g[h[k+2]].tIndices_,p=l.length,q=m.length,r=n.length,k=0;k<p;++k){var s=d[l[k]];s.tagFlag_!==c&&(s.tagFlag_=c,a.push(l[k]))}for(k=0;k<q;++k)l=d[m[k]],l.tagFlag_!==c&&(l.tagFlag_=
c,a.push(m[k]));for(k=0;k<r;++k)m=d[n[k]],m.tagFlag_!==c&&(m.tagFlag_=c,a.push(n[k]))}f=e;e=a.length}},expandsVertices:function(a,b){for(var c=++Vertex.tagMask_,e=a.length,g=this.vertices_,d=0,h=0,d=0;d<e;++d)g[a[d]].tagFlag_=c;for(d=0;b;){for(--b;d<e;++d)for(var f=g[a[d]].ringVertices_,k=f.length,h=0;h<k;++h){var l=g[f[h]];l.tagFlag_!==c&&(l.tagFlag_=c,a.push(f[h]))}d=e;e=a.length}},computeRingVertices:function(a){var b=++Vertex.tagMask_,c=this.vertices_,e=this.indexArray_,g=c[a];g.ringVertices_.length=
0;for(var d=g.ringVertices_,g=g.tIndices_,h=g.length,f=0;f<h;++f){var k=3*g[f],l=e[k],m=e[k+1],k=e[k+2];l!==a&&c[l].tagFlag_!==b&&(d.push(l),c[l].tagFlag_=b);m!==a&&c[m].tagFlag_!==b&&(d.push(m),c[m].tagFlag_=b);k!==a&&c[k].tagFlag_!==b&&(d.push(k),c[k].tagFlag_=b)}},moveTo:function(a){mat4.translate(this.matTransform_,mat4.create(),vec3.sub(a,a,this.center_))},render:function(a,b){this.render_.render(a,b,this.matTransform_,3*this.triangles_.length,this.center_)},initMesh:function(a,b){var c=this.vertexArray_,
e=this.vertices_.length,g=this.triangles_.length,d=new Aabb;d.set(c[0],c[1],c[2],c[0],c[1],c[2]);for(var h=0,f=0,h=0;h<e;++h)this.computeRingVertices(h),f=3*h,d.expandsWithPoint(c[f],c[f+1],c[f+2]);this.center_=d.computeCenter();for(var h=vec3.dist(d.min_,d.max_),k=Mesh.globalScale_/h,h=0;h<e;++h)f=3*h,c[f]*=k,c[f+1]*=k,c[f+2]*=k;mat4.scale(this.matTransform_,this.matTransform_,[k,k,k]);vec3.scale(d.min_,d.min_,k);vec3.scale(d.max_,d.max_,k);vec3.scale(this.center_,this.center_,k);c=[0,0,0];vec3.sub(c,
d.max_,d.min_);vec3.scale(c,c,0.2);vec3.sub(d.min_,d.min_,c);vec3.add(d.max_,d.max_,c);d.enlargeIfFlat(vec3.length(c));for(h=0;h<g;++h)this.updateTriangleAabbAndNormal(h);for(h=0;h<e;++h)this.updateVertexNormal(h);e=Array(g);for(h=0;h<g;++h)e[h]=h;++Triangle.tagMask_;this.octree_=new Octree;this.octree_.build(this,e,d);this.render_.initBuffers(this.vertexArray_,this.normalArray_,this.indexArray_);this.render_.updateShaders(this.render_.shaderType_,a,b)},updateBuffers:function(){this.render_.updateBuffers(this.vertexArray_,
this.normalArray_,this.indexArray_)},updateMesh:function(a,b){for(var c=b.length,e=a.length,g=0,g=0;g<e;++g)this.updateTriangleAabbAndNormal(a[g]);this.updateOctree(a);for(g=0;g<c;++g)this.updateVertexNormal(b[g])},updateTriangleAabbAndNormal:function(a){var b=this.vertexArray_,c=this.indexArray_,e=this.triangles_[a];a*=3;var g=3*c[a],d=3*c[a+1],h=3*c[a+2];a=b[g];var c=b[g+1],g=b[g+2],f=b[d],k=b[d+1],d=b[d+2],l=b[h],m=b[h+1],b=b[h+2];Geometry.normal(e.normal_,a,c,g,f,k,d,l,m,b);Geometry.computeTriangleAabb(e.aabb_,
a,c,g,f,k,d,l,m,b)},updateVertexNormal:function(a){for(var b=this.triangles_,c=this.normalArray_,e=this.vertices_[a].tIndices_,g=e.length,d=0,h=0,f=0,k=0;k<g;++k)var l=b[e[k]].normal_,d=d+l[0],h=h+l[1],f=f+l[2];b=1/Math.sqrt(d*d+h*h+f*f);a*=3;c[a]=d*b;c[a+1]=h*b;c[a+2]=f*b},updateOctree:function(a){for(var b=a.length,c=[],e=this.triangles_,g=0,d,g=0;g<b;++g){var h=e[a[g]];d=h.leaf_;if(d.aabbSplit_.pointInside(h.aabb_.computeCenter()))h.aabb_.isInside(d.aabbLoose_)||d.aabbLoose_.expandsWithAabb(h.aabb_);
else if(c.push(a[g]),d=d.iTris_,0<d.length){var f=d[d.length-1],h=h.posInLeaf_;d[h]=f;e[f].posInLeaf_=h;d.pop()}}a=c.length;for(g=0;g<a;++g)if(b=e[c[g]],this.octree_.aabbLoose_.isOutside(b.aabb_)){c=new Aabb;c.setCopy(this.octree_.aabbSplit_.min_,this.octree_.aabbSplit_.max_);g=[0,0,0];vec3.scale(g,vec3.sub(g,c.max_,c.min_),0.2);vec3.sub(c.min_,c.min_,g);vec3.add(c.max_,c.max_,g);d=[];e=e.length;for(g=0;g<e;++g)d.push(g);this.octree_=new Octree;++Triangle.tagMask_;this.octree_.build(this,d,c);this.leavesUpdate_.length=
0;break}else d=b.leaf_,this.octree_.addTriangle(this,b),d===b.leaf_&&(d=d.iTris_,b.posInLeaf_=d.length,d.push(c[g]))},checkLeavesUpdate:function(){Tools.tidy(this.leavesUpdate_);var a=this.leavesUpdate_,b=a.length,c=[],e=Octree.maxTriangles_,g=Octree.maxDepth_;++Triangle.tagMask_;for(var d=0,h=0,d=0;d<b;++d){h=a[d];if(null===h)break;h.iTris_.length?h.iTris_.length>e&&h.depth_<g&&h.constructCells(this):Octree.checkEmptiness(h,c)}Tools.tidy(c);a=c.length;for(d=0;d<a;++d){b=c[d].child_;for(h=0;8>h;++h)b[h]=
null}this.leavesUpdate_.length=0}};function Octree(a,b){this.parent_="undefined"!==typeof a?a:null;this.depth_="undefined"!==typeof b?b:0;this.child_=[];this.aabbLoose_=new Aabb;this.aabbSplit_=new Aabb;this.iTris_=[]}Octree.maxDepth_=8;Octree.maxTriangles_=100;
Octree.prototype={build:function(a,b,c){var e=this.aabbSplit_,g=this.aabbLoose_;e.copy(c);g.copy(c);this.iTris_.length=0;c=this.iTris_;var d=a.triangles_,h=b.length,f=Triangle.tagMask_,k=0,l;if(this.parent_&&this.parent_.child_[7]===this)for(k=0;k<h;++k)l=d[b[k]],l.tagFlag_!==f&&(g.expandsWithAabb(l.aabb_),c.push(b[k]));else for(k=0;k<h;++k)l=d[b[k]],e.pointInside(l.aabb_.computeCenter())&&l.tagFlag_!==f&&(g.expandsWithAabb(l.aabb_),c.push(b[k]));b=c.length;if(b>Octree.maxTriangles_&&this.depth_<
Octree.maxDepth_)this.constructCells(a);else for(k=0;k<b;++k)l=d[c[k]],l.tagFlag_=f,l.leaf_=this,l.posInLeaf_=k},constructCells:function(a){var b=this.child_,c=this.iTris_,e=this.aabbSplit_.min_,g=this.aabbSplit_.max_,d=e[0],h=e[1],f=e[2],k=g[0],l=g[1],m=g[2],n=this.aabbSplit_.computeCenter(),p=n[0],q=n[1],r=n[2],s=0.5*(k-d),u=0.5*(l-h),v=0.5*(m-f),t=this.depth_+1,w=new Aabb;b[0]=new Octree(this,t);b[0].build(a,c,w.setCopy(e,n));b[1]=new Octree(this,t);b[1].build(a,c,w.set(d+s,h,f,p+s,q,r));b[2]=
new Octree(this,t);b[2].build(a,c,w.set(p,q-u,r,k,l-u,m));b[3]=new Octree(this,t);b[3].build(a,c,w.set(d,h,f+v,p,q,r+v));b[4]=new Octree(this,t);b[4].build(a,c,w.set(d,h+u,f,p,q+u,r));b[5]=new Octree(this,t);b[5].build(a,c,w.set(p,q,r-v,k,l,m-v));b[6]=new Octree(this,t);b[6].build(a,c,w.setCopy(n,g));b[7]=new Octree(this,t);b[7].build(a,c,w.set(p-s,q,r,k-s,l,m));this.iTris_.length=0},intersectRay:function(a,b){if(this.aabbLoose_.intersectRay(a,b)){if(this.child_[0]){for(var c=[],e=this.child_,g=0;8>
g;++g){var d=e[g].intersectRay(a,b);c.push.apply(c,d)}return c}return this.iTris_}return[]},intersectSphere:function(a,b,c){if(this.aabbSplit_.intersectSphere(a,b)){if(this.child_[0]){for(var e=[],g=this.child_,d=0;8>d;++d){var h=g[d].intersectSphere(a,b,c);e.push.apply(e,h)}return e}c.push(this);return this.iTris_}return[]},addTriangle:function(a,b){if(this.aabbSplit_.pointInside(b.aabb_.computeCenter())){this.aabbLoose_.expandsWithAabb(b.aabb_);var c=this.child_;if(c[0])for(var e=0;8>e;++e)c[e].addTriangle(a,
b);else b.posInLeaf_=this.iTris_.length,b.leaf_=this,this.iTris_.push(b.id_)}}};Octree.checkEmptiness=function(a,b){var c=a.parent_;if(c){for(var e=c.child_,g=0,g=0;8>g;++g)if(0<e[g].iTris_.length||e[g].child_[0])return;b.push(c);for(g=0;8>g;++g)b.push(e[g]);Octree.checkEmptiness(c,b)}};function Picking(a){this.mesh_=null;this.pickedTriangle_=-1;this.pickedVertices_=[];this.interPoint_=[0,0,0];this.rDisplay_=50;this.rWorldSqr_=0;this.camera_=a}
Picking.prototype={intersectionMouseMesh:function(a,b,c){var e=Geometry.point2Dto3D(this.camera_,b,c,0),g=Geometry.point2Dto3D(this.camera_,b,c,1),d=mat4.create();mat4.invert(d,a.matTransform_);vec3.transformMat4(e,e,d);vec3.transformMat4(g,g,d);this.intersectionRayMesh(a,e,g,b,c)},intersectionRayMesh:function(a,b,c,e,g){this.mesh_=null;this.pickedTriangle_=-1;var d=a.triangles_,h=a.vertexArray_,f=a.indexArray_,k=[0,0,0];vec3.sub(k,c,b);vec3.normalize(k,k);for(var k=a.octree_.intersectRay(b,[1/k[0],
1/k[1],1/k[2]]),l=-1,m=k.length,n=[0,0,0],p=0;p<m;++p){var q=k[p],r=d[q],q=3*q,s=3*f[q],u=3*f[q+1],q=3*f[q+2];if(Geometry.intersectionRayTriangle(b,c,[h[s],h[s+1],h[s+2]],[h[u],h[u+1],h[u+2]],[h[q],h[q+1],h[q+2]],r.normal_,n)&&(r=vec3.sqrDist(b,n),r<l||-1===l))l=r,vec3.copy(this.interPoint_,n),this.pickedTriangle_=k[p]}-1!==this.pickedTriangle_?(this.mesh_=a,a=[0,0,0],vec3.transformMat4(a,this.interPoint_,this.mesh_.matTransform_),b=Geometry.point3Dto2D(this.camera_,a)[2],e=Geometry.point2Dto3D(this.camera_,
e+this.rDisplay_,g,b),this.rWorldSqr_=vec3.sqrDist(a,e)):this.rWorldSqr_=0},pickVerticesInSphere:function(a){this.pickedVertices_=[];for(var b=this.mesh_.vertices_,c=this.mesh_.vertexArray_,e=this.mesh_.octree_.intersectSphere(this.interPoint_,a,this.mesh_.leavesUpdate_),e=this.mesh_.getVerticesFromTriangles(e),g=e.length,d=++Vertex.sculptMask_,h=this.pickedVertices_,f=0,k=f=0;k<g;++k){var f=e[k],l=b[f],f=3*f;vec3.sqrDist([c[f],c[f+1],c[f+2]],this.interPoint_)<a&&(l.sculptFlag_=d,h.push(e[k]))}0===
this.pickedVertices_.length&&-1!==this.pickedTriangle_&&(a=this.mesh_.indexArray_,f=3*this.pickedTriangle_,this.pickedVertices_.push(a[f],a[f+1],a[f+2]))}};function Render(a){this.gl_=a;this.color_=[168,66,66];this.shaderType_=Render.mode.PHONG;this.reflectionTexUnif_=this.colorUnif_=this.lightPositionUnif_=this.radiusSquaredUnif_=this.centerPickingUnif_=this.normalMatrixUnif_=this.mvMatrixUnif_=this.mvpMatrixUnif_=this.barycenterAttrib_=this.normalAttrib_=this.vertexAttrib_=this.vertexShader_=this.fragmentShader_=this.shaderProgram_=this.reflectionLoc_=this.indexBuffer_=this.barycenterBuffer_=this.normalBuffer_=this.vertexBuffer_=null}
Render.mode={PHONG:0,TRANSPARENCY:1,WIREFRAME:2,MATERIAL1:3,MATERIAL2:4};
Render.prototype={updateShaders:function(a,b,c){var e=this.gl_;this.shaderType_=a;e.deleteProgram(this.shaderProgram_);if(this.shaderType_===Render.mode.MATERIAL1||this.shaderType_===Render.mode.MATERIAL2)this.shaderType_===Render.mode.MATERIAL1?this.reflectionLoc_=this.loadTexture(e,b.material1):this.shaderType_===Render.mode.MATERIAL2&&(this.reflectionLoc_=this.loadTexture(e,b.material2));this.initShaders(c)},loadTexture:function(a,b){var c=a.createTexture();a.bindTexture(a.TEXTURE_2D,c);a.texImage2D(a.TEXTURE_2D,
0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,b);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_NEAREST);a.generateMipmap(a.TEXTURE_2D);a.bindTexture(a.TEXTURE_2D,null);return c},initShaders:function(a){var b=this.gl_;switch(this.shaderType_){case Render.mode.PHONG:this.loadShaders(a.phongVertex,a.phongFragment);break;case Render.mode.WIREFRAME:this.loadShaders(a.wireframeVertex,a.wireframeFragment);break;case Render.mode.TRANSPARENCY:this.loadShaders(a.transparencyVertex,
a.transparencyFragment);break;case Render.mode.MATERIAL1:case Render.mode.MATERIAL2:this.loadShaders(a.reflectionVertex,a.reflectionFragment)}a=this.shaderProgram_=b.createProgram();b.attachShader(a,this.vertexShader_);b.attachShader(a,this.fragmentShader_);b.linkProgram(a);b.useProgram(a);this.vertexAttrib_=b.getAttribLocation(this.shaderProgram_,"vertex");this.normalAttrib_=b.getAttribLocation(this.shaderProgram_,"normal");this.shaderType_===Render.mode.WIREFRAME&&(this.barycenterAttrib_=b.getAttribLocation(this.shaderProgram_,
"barycenter"));this.mvpMatrixUnif_=b.getUniformLocation(a,"mvpMat");this.mvMatrixUnif_=b.getUniformLocation(a,"mvMat");this.normalMatrixUnif_=b.getUniformLocation(a,"nMat");this.centerPickingUnif_=b.getUniformLocation(a,"centerPicking");this.radiusSquaredUnif_=b.getUniformLocation(a,"radiusSquared");this.colorUnif_=b.getUniformLocation(a,"color");this.shaderType_===Render.mode.TRANSPARENCY&&(this.lightPositionUnif_=b.getUniformLocation(a,"lightPos"));if(this.shaderType_===Render.mode.MATERIAL1||this.shaderType_===
Render.mode.MATERIAL2)this.reflectionTexUnif_=b.getUniformLocation(a,"refTex");b.detachShader(a,this.fragmentShader_);b.deleteShader(this.fragmentShader_);b.detachShader(a,this.vertexShader_);b.deleteShader(this.vertexShader_)},loadShaders:function(a,b){var c=this.gl_;this.vertexShader_=c.createShader(c.VERTEX_SHADER);c.shaderSource(this.vertexShader_,a);c.compileShader(this.vertexShader_);this.fragmentShader_=c.createShader(c.FRAGMENT_SHADER);c.shaderSource(this.fragmentShader_,b);c.compileShader(this.fragmentShader_)},
initBuffers:function(a,b,c){var e=this.gl_;this.vertexBuffer_=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer_);e.bufferData(e.ARRAY_BUFFER,a,e.DYNAMIC_DRAW);this.normalBuffer_=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,this.normalBuffer_);e.bufferData(e.ARRAY_BUFFER,b,e.DYNAMIC_DRAW);this.indexBuffer_=e.createBuffer();e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer_);e.bufferData(e.ELEMENT_ARRAY_BUFFER,c,e.STATIC_DRAW)},render:function(a,b,c,e,g){var d=this.gl_;d.useProgram(this.shaderProgram_);
var h=b.interPoint_;b=b.rWorldSqr_;var f=mat4.create();mat4.mul(f,a.view_,c);c=mat4.create();mat4.mul(c,a.proj_,f);d.enableVertexAttribArray(this.vertexAttrib_);d.bindBuffer(d.ARRAY_BUFFER,this.vertexBuffer_);d.vertexAttribPointer(this.vertexAttrib_,3,d.FLOAT,!1,0,0);d.enableVertexAttribArray(this.normalAttrib_);d.bindBuffer(d.ARRAY_BUFFER,this.normalBuffer_);d.vertexAttribPointer(this.normalAttrib_,3,d.FLOAT,!1,0,0);d.uniformMatrix4fv(this.mvMatrixUnif_,!1,f);d.uniformMatrix4fv(this.mvpMatrixUnif_,
!1,c);d.uniformMatrix3fv(this.normalMatrixUnif_,!1,mat3.normalFromMat4(mat3.create(),f));d.uniform3fv(this.centerPickingUnif_,vec3.transformMat4([0,0,0],h,f));d.uniform1f(this.radiusSquaredUnif_,b);switch(this.shaderType_){case Render.mode.PHONG:d.uniform3fv(this.colorUnif_,vec3.scale([0,0,0],this.color_,1/255));this.drawBuffer(e);break;case Render.mode.WIREFRAME:d.enableVertexAttribArray(this.barycenterAttrib_);d.bindBuffer(d.ARRAY_BUFFER,this.barycenterBuffer_);d.vertexAttribPointer(this.barycenterAttrib_,
3,d.FLOAT,!1,0,0);d.uniform3fv(this.colorUnif_,vec3.scale([0,0,0],this.color_,1/255));d.drawArrays(d.TRIANGLES,0,e);break;case Render.mode.TRANSPARENCY:d.depthMask(!1);d.enable(d.BLEND);d.uniform4fv(this.colorUnif_,[this.color_[0]/255,this.color_[1]/255,this.color_[2]/255,0.15]);d.uniform3fv(this.lightPositionUnif_,g);this.drawBuffer(e);d.disable(d.BLEND);d.depthMask(!0);break;case Render.mode.MATERIAL1:case Render.mode.MATERIAL2:this.shaderType_===Render.mode.MATERIAL1?d.uniform3fv(this.colorUnif_,
vec3.scale([0,0,0],this.color_,-1/255)):d.uniform3fv(this.colorUnif_,vec3.scale([0,0,0],this.color_,1/255)),d.activeTexture(d.TEXTURE0),d.bindTexture(d.TEXTURE_2D,this.reflectionLoc_),d.uniform1i(this.reflectionTexUnif_,0),this.drawBuffer(e)}},drawBuffer:function(a){var b=this.gl_;b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,this.indexBuffer_);b.drawElements(b.TRIANGLES,a,SculptGL.elementIndexType,0)},updateBuffers:function(a,b,c){if(this.shaderType_===Render.mode.WIREFRAME)this.makeWireframeBuffers(a,b,c);
else{var e=this.gl_;e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer_);e.bufferData(e.ARRAY_BUFFER,a,e.DYNAMIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.normalBuffer_);e.bufferData(e.ARRAY_BUFFER,b,e.DYNAMIC_DRAW);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer_);e.bufferData(e.ELEMENT_ARRAY_BUFFER,c,e.STATIC_DRAW)}},makeWireframeBuffers:function(a,b,c){for(var e=this.gl_,g=new Float32Array(3*c.length),d=0,h=0,f=0,d=0;d<c.length;++d)h=3*d,f=3*c[d],g[h]=a[f],g[h+1]=a[f+1],g[h+2]=a[f+2];e.bindBuffer(e.ARRAY_BUFFER,
this.vertexBuffer_);e.bufferData(e.ARRAY_BUFFER,g,e.DYNAMIC_DRAW);a=new Float32Array(3*c.length);for(d=0;d<c.length;++d)h=3*d,f=3*c[d],a[h]=b[f],a[h+1]=b[f+1],a[h+2]=b[f+2];e.bindBuffer(e.ARRAY_BUFFER,this.normalBuffer_);e.bufferData(e.ARRAY_BUFFER,a,e.DYNAMIC_DRAW);b=new Float32Array(3*c.length);for(d=0;d<c.length/3;++d)h=9*d,b[h]=1,b[h+1]=0,b[h+2]=0,b[h+3]=0,b[h+4]=1,b[h+5]=0,b[h+6]=0,b[h+7]=0,b[h+8]=1;this.barycenterBuffer_||(this.barycenterBuffer_=e.createBuffer());e.bindBuffer(e.ARRAY_BUFFER,
this.barycenterBuffer_);e.bufferData(e.ARRAY_BUFFER,b,e.DYNAMIC_DRAW)}};function Sculpt(a){this.states_=a;this.mesh_=null;this.intensity_=0.75;this.tool_=Sculpt.tool.BRUSH;this.topo_=Sculpt.topo.SUBDIVISION;this.detail_=0.75;this.negative_=!1;this.d2Max_=this.d2Min_=0;this.d2Thickness_=0.5;this.d2Move_=0;this.rotateData_={normal:[0,0,0],center2d:[0,0]}}Sculpt.tool={BRUSH:0,INFLATE:1,ROTATE:2,SMOOTH:3,FLATTEN:4};Sculpt.topo={STATIC:0,SUBDIVISION:1,DECIMATION:2,UNIFORMISATION:3,ADAPTIVE:4};
Sculpt.prototype={setAdaptiveParameters:function(a){this.d2Max_=0.2*a*(1.1-this.detail_);this.d2Min_=this.d2Max_/4.2025;this.d2Move_=0.2375*this.d2Min_;this.d2Thickness_=1.1*(4*this.d2Move_+this.d2Max_/3)},sculptMesh:function(a,b,c,e,g){var d=this.mesh_,h=a.pickedVertices_,f=a.rWorldSqr_;a=a.interPoint_;var k=d.vertices_,l=d.getTrianglesFromVertices(h);this.states_.pushState(l,h);var m=new Topology(this.states_);m.mesh_=d;m.radiusSquared_=f;m.center_=a;this.setAdaptiveParameters(f);switch(this.topo_){case Sculpt.topo.SUBDIVISION:l=
m.subdivision(l,this.d2Max_);break;case Sculpt.topo.DECIMATION:l=m.decimation(l,this.d2Min_);break;case Sculpt.topo.UNIFORMISATION:case Sculpt.topo.ADAPTIVE:l=m.subdivision(l,this.d2Max_),l=m.decimation(l,this.d2Min_)}for(var h=d.getVerticesFromTriangles(l),n=h.length,p=[],q=Vertex.sculptMask_,r=0;r<n;++r)k[h[r]].sculptFlag_===q&&p.push(h[r]);switch(this.tool_){case Sculpt.tool.BRUSH:this.flatten(a,p,f,0.5*this.intensity_);this.brush(a,p,f,this.intensity_);break;case Sculpt.tool.INFLATE:this.inflate(a,
p,f,this.intensity_);break;case Sculpt.tool.ROTATE:this.rotate(a,p,f,b,c,e,g);break;case Sculpt.tool.SMOOTH:this.smooth(p,this.intensity_);break;case Sculpt.tool.FLATTEN:this.flatten(a,p,f,this.intensity_)}this.topo_===Sculpt.topo.ADAPTIVE&&(l=m.adaptTopology(l,this.d2Thickness_),h=d.getVerticesFromTriangles(l));d.updateMesh(l,h)},brush:function(a,b,c,e){var g=this.areaNormal(b),d=this.mesh_.vertexArray_;c=Math.sqrt(c);var h=b.length;e=0.1*e*c;this.topo_===Sculpt.topo.ADAPTIVE&&(e=Math.min(Math.sqrt(this.d2Move_),
e));this.negative_&&(e=-e);var f=a[0],k=a[1];a=a[2];for(var l=g[0],m=g[1],g=g[2],n=0;n<h;++n){var p=3*b[n],q=d[p]-f,r=d[p+1]-k,s=d[p+2]-a,q=Math.sqrt(q*q+r*r+s*s)/c,q=3*q*q*q*q-4*q*q*q+1;d[p]+=l*e*q;d[p+1]+=m*e*q;d[p+2]+=g*e*q}},inflate:function(a,b,c,e){var g=this.mesh_,d=g.vertexArray_,g=g.normalArray_,h=b.length;c=Math.sqrt(c);e=0.1*e*c;this.topo_===Sculpt.topo.ADAPTIVE&&(e=Math.min(Math.sqrt(this.d2Move_),e));this.negative_&&(e=-e);var f=a[0],k=a[1];a=a[2];for(var l=0;l<h;++l){var m=3*b[l],n=
d[m]-f,p=d[m+1]-k,q=d[m+2]-a,n=Math.sqrt(n*n+p*p+q*q)/c,n=3*n*n*n*n-4*n*n*n+1;d[m]+=g[m]*e*n;d[m+1]+=g[m+1]*e*n;d[m+2]+=g[m+2]*e*n}},startRotate:function(a,b,c){var e=this.rotateData_,g=this.mesh_,d=Geometry.point2Dto3D(a.camera_,b,c,0),h=Geometry.point2Dto3D(a.camera_,b,c,1),f=mat4.create();mat4.invert(f,g.matTransform_);vec3.transformMat4(d,d,f);vec3.transformMat4(h,h,f);a.intersectionRayMesh(g,d,h,b,c);a.mesh_&&(a.pickVerticesInSphere(a.rWorldSqr_),a=[0,0,0],vec3.sub(a,d,h),vec3.normalize(a,a),
e.normal=a,e.center2d=[b,c])},rotate:function(a,b,c,e,g,d,h){var f=this.rotateData_,k=f.center2d;g=[e-k[0],g-k[1]];if(!(30>vec2.len(g))){vec2.normalize(g,g);f=f.normal;e=[0,0,0,0];d=[d-k[0],h-k[1]];vec2.normalize(d,d);d=Geometry.signedAngle2d(g,d);h=this.mesh_.vertexArray_;c=Math.sqrt(c);k=b.length;g=a[0];for(var l=a[1],m=a[2],n=0;n<k;++n){var p=3*b[n],q=h[p]-g,r=h[p+1]-l,s=h[p+2]-m,q=Math.sqrt(q*q+r*r+s*s)/c,r=[h[p],h[p+1],h[p+2]];quat.setAxisAngle(e,f,d*(3*q*q*q*q-4*q*q*q+1));vec3.sub(r,r,a);vec3.transformQuat(r,
r,e);vec3.add(r,r,a);h[p]=r[0];h[p+1]=r[1];h[p+2]=r[2]}}},smooth:function(a,b){var c=this.mesh_.vertexArray_,e=a.length,g=new Float32Array(3*e);this.laplacianSmooth(a,g);for(var d=this.d2Move_,h=Math.sqrt(d),f=this.topo_===Sculpt.topo.ADAPTIVE,k=0;k<e;++k){var l=3*a[k],m=3*k,n=(g[m]-c[l])*b,p=(g[m+1]-c[l+1])*b,m=(g[m+2]-c[l+2])*b;if(f){var q=n*n+p*p+m*m;q>d&&(q=Math.sqrt(q),n=n/q*h,p=p/q*h,m=m/q*h)}c[l]+=n;c[l+1]+=p;c[l+2]+=m}},flatten:function(a,b,c,e){var g=this.areaNormal(b),d=this.areaCenter(b),
h=this.mesh_.vertexArray_;c=Math.sqrt(c);var f=b.length;e*=0.3;var k=a[0],l=a[1];a=a[2];for(var m=d[0],n=d[1],d=d[2],p=g[0],q=g[1],g=g[2],r=Math.sqrt(this.d2Move_),s=this.topo_===Sculpt.topo.ADAPTIVE,u=0;u<f;++u){var v=3*b[u],t=h[v],w=h[v+1],x=h[v+2],y=(t-m)*p+(w-n)*q+(x-d)*g,t=t-k,w=w-l,x=x-a,x=Math.sqrt(t*t+w*w+x*x)/c,x=3*x*x*x*x-4*x*x*x+1,x=s?Math.min(r,y*e*x):y*e*x;h[v]-=p*x;h[v+1]-=q*x;h[v+2]-=g*x}},smoothFlat:function(a,b){var c=this.mesh_,e=c.vertexArray_,c=c.normalArray_,g=a.length,d=new Float32Array(3*
g);this.laplacianSmooth(a,d);for(var h=0;h<g;++h){var f=3*a[h],k=e[f],l=e[f+1],m=e[f+2],n=c[f],p=c[f+1],q=c[f+2],r=3*h,s=d[r],u=d[r+1],r=d[r+2],v=n*(s-k)+p*(u-l)+q*(r-m);e[f]+=(s-n*v-k)*b;e[f+1]+=(u-p*v-l)*b;e[f+2]+=(r-q*v-m)*b}},laplacianSmooth:function(a,b){for(var c=this.mesh_,e=c.vertices_,c=c.vertexArray_,g=a.length,d=0;d<g;++d){var h=3*d,f=e[a[d]],k=f.ringVertices_,l=k.length,m=0,n=0,p=0,q=0,r=0;if(l!==f.tIndices_.length){for(q=f=0;q<l;++q){var r=k[q],s=e[r];s.ringVertices_.length!==s.tIndices_.length&&
(r*=3,m+=c[r],n+=c[r+1],p+=c[r+2],++f)}b[h]=m/f;b[h+1]=n/f;b[h+2]=p/f}else{for(q=0;q<l;++q)r=3*k[q],m+=c[r],n+=c[r+1],p+=c[r+2];b[h]=m/l;b[h+1]=n/l;b[h+2]=p/l}}},areaNormal:function(a){for(var b=this.mesh_.normalArray_,c=a.length,e=0,g=0,d=0,h=0;h<c;++h)var f=3*a[h],e=e+b[f],g=g+b[f+1],d=d+b[f+2];a=1/Math.sqrt(e*e+g*g+d*d);return[e*a,g*a,d*a]},areaCenter:function(a){for(var b=this.mesh_.vertexArray_,c=a.length,e=0,g=0,d=0,h=0;h<c;++h)var f=3*a[h],e=e+b[f],g=g+b[f+1],d=d+b[f+2];return[e/c,g/c,d/c]}};var Tools={nextHighestPowerOfTwo:function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1},tidy:function(a){a.sort(function(a,b){return a-b});for(var b=a.length,c=0,e=0,c=1;c<b;++c)a[e]!==a[c]&&(a[++e]=a[c]);1<c&&(a.length=e+1)},intersectionArrays:function(a,b){for(var c=0,e=0,g=[],d=a.length,h=b.length;c<d&&e<h;)a[c]<b[e]?c++:a[c]>b[e]?e++:(g.push(a[c]),++c,++e);return g}};"function"!==typeof String.prototype.endsWith&&(String.prototype.endsWith=function(a){return this.slice(-a.length)===a});
"function"!==typeof String.prototype.startsWith&&(String.prototype.startsWith=function(a){return this.slice(0,a.length)===a});Array.prototype.rotate=function(){return function(a){a=-a;var b=this.length;a=(Math.abs(a)>=b&&(a%=b),0>a&&(a+=b),a);for(var c,e;a;a=(Math.ceil(b/a)-1)*a-b+(b=a))for(c=b;c>a;e=this[--c],this[c]=this[c-a],this[c-a]=e);return this}}();function Topology(a){this.states_=a;this.mesh_=null;this.center_=[0,0,0];this.verticesMap_={};this.radiusSquared_=0;this.iTrisToDelete_=[];this.iVertsToDelete_=[];this.iVertsDecimated_=[]};Topology.prototype.subdivision=function(a,b){var c=this.mesh_.triangles_,e=0;do e=c.length,a=this.subdivide(a,b);while(e!==c.length);return a};
Topology.prototype.subdivide=function(a,b){var c=this.mesh_,e=c.vertices_,g=c.triangles_,d=e.length,h=g.length,f=[],k=[];this.verticesMap_={};this.initSplit(a,f,k,b);20<f.length&&c.expandsTriangles(f,3);this.states_.pushState(f,c.getVerticesFromTriangles(f));k.length=f.length;this.checkArrayLength(f.length);this.subdivideTriangles(f,k,b);for(var k=[],l=g.length,f=0,f=h;f<l;++f)k.push(f);c.expandsTriangles(k,1);f=k.slice(l-h);this.states_.pushState(f,c.getVerticesFromTriangles(f));a.push.apply(a,k);
for(var h=[],l=a.length,m=++Triangle.tagMask_,f=0;f<l;++f){var n=a[f],p=g[n];p.tagFlag_!==m&&(p.tagFlag_=m,h.push(n))}for(f=g.length;0<k.length;)k=this.fillTriangles(k);for(l=g.length;f<l;++f)h.push(f);g=[];k=e.length;for(f=d;f<k;++f)g.push(f);d=g.length;c.expandsVertices(g,1);f=new Sculpt;f.mesh_=c;f.smoothFlat(g.slice(d),1);for(var c=this.mesh_.vertexArray_,f=this.center_,k=f[0],l=f[1],m=f[2],n=Vertex.sculptMask_,d=g.length,q=0,f=0;f<d;++f){var p=g[f],q=3*p,r=c[q]-k,s=c[q+1]-l,q=c[q+2]-m;e[p].sculptFlag_=
r*r+s*s+q*q<this.radiusSquared_?n:n-1}return h};
Topology.prototype.checkArrayLength=function(a){var b=this.mesh_,c=b.triangles_,e=b.vertexArray_,g=b.normalArray_,d=b.indexArray_,h=0,f=3*b.vertices_.length+200*a;if(e.length<f){b=new Float32Array(2*f);f=e.length;for(h=0;h<f;++h)b[h]=e[h];this.mesh_.vertexArray_=b;b=new Float32Array(2*f);for(h=0;h<f;++h)b[h]=g[h];this.mesh_.normalArray_=b}a=3*c.length+200*a;if(d.length<a){b=new SculptGL.indexArrayType(2*a);a=d.length;for(h=0;h<a;++h)b[h]=d[h];this.mesh_.indexArray_=b}};
Topology.prototype.initSplit=function(a,b,c,e){for(var g=a.length,d=0;d<g;++d){switch(this.findSplit(a[d],e,!0)){case 1:c.push(1);break;case 2:c.push(2);break;case 3:c.push(3);break;default:continue}b.push(a[d])}};
Topology.prototype.findSplit=function(a,b,c){var e=this.mesh_,g=e.vertexArray_,e=e.indexArray_,d=3*a;a=e[d+1];var h=e[d+2],d=3*e[d],e=[g[d],g[d+1],g[d+2]],d=3*a;a=[g[d],g[d+1],g[d+2]];d=3*h;g=[g[d],g[d+1],g[d+2]];if(c&&!Geometry.sphereIntersectTriangle(this.center_,2*this.radiusSquared_,e,a,g)&&!Geometry.pointInsideTriangle(this.center_,e,a,g))return 0;d=[0,0,0];c=vec3.sqrLen(vec3.sub(d,e,a));a=vec3.sqrLen(vec3.sub(d,a,g));e=vec3.sqrLen(vec3.sub(d,e,g));return c>a&&c>e?c>b?1:0:a>e?a>b?2:0:e>b?3:0};
Topology.prototype.subdivideTriangles=function(a,b,c){for(var e=this.mesh_.indexArray_,g=a.length,d=0;d<g;++d){var h=3*a[d];if(1===b[d])this.halfEdgeSplit(a[d],e[h],e[h+1],e[h+2]);else if(2===b[d])this.halfEdgeSplit(a[d],e[h+1],e[h+2],e[h]);else if(3===b[d])this.halfEdgeSplit(a[d],e[h+2],e[h],e[h+1]);else{var f=this.findSplit(a[d],c);1===f?this.halfEdgeSplit(a[d],e[h],e[h+1],e[h+2]):2===f?this.halfEdgeSplit(a[d],e[h+1],e[h+2],e[h]):3===f&&this.halfEdgeSplit(a[d],e[h+2],e[h],e[h+1])}}};
Topology.prototype.halfEdgeSplit=function(a,b,c,e){var g=this.mesh_,d=g.vertices_,h=g.triangles_,f=g.vertexArray_,k=g.normalArray_,l=g.indexArray_,m=h[a].leaf_,g=m.iTris_,n=d[b],p=d[c],q=d[e],r=this.verticesMap_,s=[Math.min(b,c),Math.max(b,c)],u=!1,v=r[s];void 0===v&&(v=d.length,u=!0,r[s]=v);q.ringVertices_.push(v);var t=3*a;l[t]=b;l[t+1]=v;l[t+2]=e;r=h.length;s=new Triangle(r);t=3*r;l[t]=v;l[t+1]=c;l[t+2]=e;s.stateFlag_=Mesh.stateMask_;q.tIndices_.push(r);p.replaceTriangle(a,r);s.leaf_=m;s.posInLeaf_=
g.length;if(u){var w=d.length,l=new Vertex(w),t=3*b,m=f[t],q=f[t+1],u=f[t+2],x=k[t],y=k[t+1],z=k[t+2],t=3*c,E=f[t],F=f[t+1],A=f[t+2],B=k[t],C=k[t+1],G=k[t+2],t=x*B+y*C+z*G,H=0,H=-1>=t?Math.PI:1<=t?0:Math.acos(t),I=x+B,J=y+C,K=z+G,D=1/Math.sqrt(I*I+J*J+K*K),t=3*w;k[t]=I*D;k[t+1]=J*D;k[t+2]=K*D;w=m-E;I=q-F;J=u-A;D=Math.sqrt(w*w+I*I+J*J);0<w*(x-B)+I*(y-C)+J*(z-G)?(f[t]=0.5*(m+E)+0.12*k[t]*H*D,f[t+1]=0.5*(q+F)+0.12*k[t+1]*H*D,f[t+2]=0.5*(u+A)+0.12*k[t+2]*H*D):(f[t]=0.5*(m+E)-0.12*k[t]*H*D,f[t+1]=0.5*
(q+F)-0.12*k[t+1]*H*D,f[t+2]=0.5*(u+A)-0.12*k[t+2]*H*D);l.stateFlag_=Mesh.stateMask_;l.ringVertices_.push(b,c,e);n.replaceRingVertex(c,v);p.replaceRingVertex(b,v);l.tIndices_.push(a,r);d.push(l)}else b=d[v],b.ringVertices_.push(e),b.tIndices_.push(a,r);g.push(r);h.push(s)};
Topology.prototype.fillTriangles=function(a){for(var b=this.mesh_,c=b.vertices_,e=b.triangles_,b=b.indexArray_,g=a.length,d=[],h=0;h<g;++h){var f=a[h],k=3*f,l=b[k],m=b[k+1],k=b[k+2],n=this.verticesMap_,p=n[[Math.min(l,m),Math.max(l,m)]],q=n[[Math.min(m,k),Math.max(m,k)]],n=n[[Math.min(l,k),Math.max(l,k)]],r=c[l].ringVertices_.length,s=c[m].ringVertices_.length,u=c[k].ringVertices_.length,v=0;p?v=q?n?r<s&&r<u?2:s<u?3:1:r<u?2:1:n&&s<u?3:1:q?v=n&&s<r?3:2:n&&(v=3);if(1===v)this.fillTriangle(f,l,m,k,p);
else if(2===v)this.fillTriangle(f,m,k,l,q);else if(3===v)this.fillTriangle(f,k,l,m,n);else continue;d.push(f,e.length-1)}return d};
Topology.prototype.fillTriangle=function(a,b,c,e,g){var d=this.mesh_,h=d.vertices_,f=d.triangles_,d=d.indexArray_,k=3*a;d[k]=b;d[k+1]=g;d[k+2]=e;b=f[a].leaf_;var l=b.iTris_,m=h[c],n=h[e],k=h[g];k.ringVertices_.push(e);n.ringVertices_.push(g);h=f.length;k.tIndices_.push(a,h);var p=new Triangle(h),k=3*h;d[k]=g;d[k+1]=c;d[k+2]=e;p.stateFlag_=Mesh.stateMask_;p.leaf_=b;p.posInLeaf_=l.length;n.tIndices_.push(h);m.replaceTriangle(a,h);l.push(h);f.push(p)};Topology.prototype.decimation=function(a,b){for(var c=0,e=this.radiusSquared_,g=Math.sqrt(e),d=this.mesh_,h=d.triangles_,f=d.vertexArray_,d=d.indexArray_,k=this.center_,l=k[0],m=k[1],k=k[2],n=0;n<a.length;++n){var p=a[n];if(!(0>h[p].tagFlag_)){var c=3*p,q=d[c],r=d[c+1],s=d[c+2],c=3*q,u=f[c],v=f[c+1],t=f[c+2],c=3*r,w=f[c],x=f[c+1],y=f[c+2],c=3*s,z=f[c],E=f[c+1],F=f[c+2],A=(u+w+z)/3-l,B=(v+x+E)/3-m,C=(t+y+F)/3-k,c=A*A+B*B+C*C;if(c<e)c=1;else if(c<2*e)c=(Math.sqrt(c)-g)/(g*Math.SQRT2-g),c=3*c*c*c*c-
4*c*c*c+1;else continue;var A=w-u,B=x-v,C=y-t,G=A*A+B*B+C*C,A=w-z,B=x-E,C=y-F,w=A*A+B*B+C*C,A=u-z,B=v-E,C=t-F,u=A*A+B*B+C*C;G<w&&G<u?G<b*c&&this.decimateTriangles(p,this.findOppositeTriangle(p,q,r),a):w<u?w<b*c&&this.decimateTriangles(p,this.findOppositeTriangle(p,r,s),a):u<b*c&&this.decimateTriangles(p,this.findOppositeTriangle(p,q,s),a)}}this.applyDeletion();return this.getValidModifiedTriangles(this.getValidModifiedVertices(),a)};
Topology.prototype.applyDeletion=function(){var a=this.iTrisToDelete_;Tools.tidy(a);for(var b=0,b=a.length-1;0<=b;--b)this.deleteTriangle(a[b]);a=this.iVertsToDelete_;Tools.tidy(a);for(b=a.length-1;0<=b;--b)this.deleteVertex(a[b])};Topology.prototype.getValidModifiedVertices=function(){for(var a=this.mesh_.vertices_,b=this.iVertsDecimated_,c=b.length,e=a.length,g=++Vertex.tagMask_,d=[],h=0;h<c;++h){var f=b[h];if(!(f>=e)){var k=a[f];k.tagFlag_!==g&&(k.tagFlag_=g,d.push(f))}}return d};
Topology.prototype.getValidModifiedTriangles=function(a,b){var c=this.mesh_,e=c.triangles_,c=c.getTrianglesFromVertices(a);b.push.apply(b,c);for(var c=[],g=b.length,d=e.length,h=++Triangle.tagMask_,f=0;f<g;++f){var k=b[f];if(!(k>=d)){var l=e[k];l.tagFlag_!==h&&(l.tagFlag_=h,c.push(k))}}return c};
Topology.prototype.findOppositeTriangle=function(a,b,c){var e=this.mesh_.vertices_;b=e[b].tIndices_;c=e[c].tIndices_;b.sort(function(a,b){return a-b});c.sort(function(a,b){return a-b});c=Tools.intersectionArrays(b,c);return 2!==c.length?-1:c[0]===a?c[1]:c[0]};
Topology.prototype.decimateTriangles=function(a,b,c){if(-1!==b){var e=this.mesh_.indexArray_,g=3*a,d=e[g],h=e[g+1],f=e[g+2],g=3*b,k=e[g],l=e[g+1],e=e[g+2];d===k?h===e?this.edgeCollapse(a,b,d,h,f,l,c):this.edgeCollapse(a,b,d,f,h,e,c):d===l?h===k?this.edgeCollapse(a,b,d,h,f,e,c):this.edgeCollapse(a,b,d,f,h,k,c):d===e?h===l?this.edgeCollapse(a,b,d,h,f,k,c):this.edgeCollapse(a,b,d,f,h,l,c):h===k?this.edgeCollapse(a,b,f,h,d,l,c):h===l?this.edgeCollapse(a,b,f,h,d,e,c):this.edgeCollapse(a,b,f,h,d,k,c)}};
Topology.prototype.edgeCollapse=function(a,b,c,e,g,d,h){var f=this.mesh_,k=f.vertices_,l=f.triangles_,m=f.vertexArray_,n=f.normalArray_,p=f.indexArray_,q=k[c],r=k[e],s=q.ringVertices_,u=r.ringVertices_,v=q.tIndices_,t=r.tIndices_,w=k[g],x=k[d];if(s.length===v.length&&u.length===t.length&&w.ringVertices_.length===w.tIndices_.length&&x.ringVertices_.length===x.tIndices_.length)if(this.iVertsDecimated_.push(c,e),this.states_.pushState(v,s),this.states_.pushState(t,u),s.sort(function(a,b){return a-b}),
u.sort(function(a,b){return a-b}),k=0,3<=Tools.intersectionArrays(s,u).length)q.removeTriangle(b),r.removeTriangle(a),w.tIndices_.push(b),x.tIndices_.push(a),k=3*a,p[k]===e?p[k]=d:p[k+1]===e?p[k+1]=d:p[k+2]=d,k=3*b,p[k]===c?p[k]=g:p[k+1]===c?p[k+1]=g:p[k+2]=g,f.computeRingVertices(c),f.computeRingVertices(e),f.computeRingVertices(g),f.computeRingVertices(d),this.cleanUpSingularVertex(c),this.cleanUpSingularVertex(e),this.cleanUpSingularVertex(g),this.cleanUpSingularVertex(d);else{var k=3*c,y=3*e;
g=n[k]+n[y];d=n[k+1]+n[y+1];var y=n[k+2]+n[y+2],z=1/Math.sqrt(g*g+d*d+y*y);g*=z;d*=z;y*=z;n[k]=g;n[k+1]=d;n[k+2]=y;s.push.apply(s,u);q.removeTriangle(a);q.removeTriangle(b);r.removeTriangle(a);r.removeTriangle(b);w.removeTriangle(a);x.removeTriangle(b);v.push.apply(v,t);q=t.length;for(n=n=0;n<q;++n)u=3*t[n],p[u]===e?p[u]=c:p[u+1]===e?p[u+1]=c:p[u+2]=c;f.computeRingVertices(c);q=t=p=0;u=s.length;for(n=0;n<u;++n)w=s[n],f.computeRingVertices(w),w*=3,p+=m[w],t+=m[w+1],q+=m[w+2];p/=u;t/=u;q/=u;f=g*(p-
m[k])+d*(t-m[k+1])+y*(q-m[k+2]);m[k]=p-g*f;m[k+1]=t-d*f;m[k+2]=q-y*f;r.tagFlag_=-1;l[a].tagFlag_=-1;l[b].tagFlag_=-1;this.iVertsToDelete_.push(e);this.iTrisToDelete_.push(a,b);h.push.apply(h,v);this.cleanUpSingularVertex(c)}};
Topology.prototype.deleteTriangle=function(a){var b=0,c=this.mesh_,e=c.vertices_,g=c.triangles_,d=c.vertexArray_,h=c.normalArray_,c=c.indexArray_,f=g[a],b=f.posInLeaf_,f=f.leaf_.iTris_,k=f[f.length-1];a!==k&&(f[b]=k,g[k].posInLeaf_=b);f.pop();f=g.length-1;if(f!==a){var k=g[f],b=3*f,l=c[b],m=c[b+1],n=c[b+2],p=Mesh.stateMask_,q=this.states_.undos_[this.states_.curUndoIndex_];k.stateFlag_!==p&&(k.stateFlag_=p,q.tState_.push(k.clone()),q.iArState_.push(l,m,n));k.id_=a;k.leaf_.iTris_[k.posInLeaf_]=a;var r=
e[l],s=e[m],e=e[n];r.stateFlag_!==p&&(b=3*l,r.stateFlag_=p,q.vState_.push(r.clone()),q.vArState_.push(d[b],d[b+1],d[b+2]),q.nArState_.push(h[b],h[b+1],h[b+2]));s.stateFlag_!==p&&(b=3*m,s.stateFlag_=p,q.vState_.push(s.clone()),q.vArState_.push(d[b],d[b+1],d[b+2]),q.nArState_.push(h[b],h[b+1],h[b+2]));e.stateFlag_!==p&&(b=3*n,e.stateFlag_=p,q.vState_.push(e.clone()),q.vArState_.push(d[b],d[b+1],d[b+2]),q.nArState_.push(h[b],h[b+1],h[b+2]));r.replaceTriangle(f,a);s.replaceTriangle(f,a);e.replaceTriangle(f,
a);this.iVertsDecimated_.push(l,m,n);g[a]=k;a*=3;c[a]=l;c[a+1]=m;c[a+2]=n}g.pop()};
Topology.prototype.deleteVertex=function(a){var b=this.mesh_,c=b.vertices_,e=b.triangles_,g=b.vertexArray_,d=b.normalArray_,h=b.indexArray_,b=c.length-1;if(a!==b){var f=0,k=c[b],f=3*b,l=g[f],m=g[f+1],n=g[f+2],p=d[f],q=d[f+1],r=d[f+2],s=Mesh.stateMask_,u=this.states_.undos_[this.states_.curUndoIndex_];k.stateFlag_!==s&&(k.stateFlag_=s,u.vState_.push(k.clone()),u.vArState_.push(l,m,n),u.nArState_.push(p,q,r));k.id_=a;for(var v=k.tIndices_,t=k.ringVertices_,w=v.length,x=t.length,y=0,y=0;y<w;++y){var f=
v[y],z=e[f],f=3*f;z.stateFlag_!==s&&(z.stateFlag_=s,u.tState_.push(z.clone()),u.iArState_.push(h[f],h[f+1],h[f+2]));h[f]===b?h[f]=a:h[f+1]===b?h[f+1]=a:h[f+2]=a}for(y=0;y<x;++y)f=t[y],e=c[f],e.stateFlag_!==s&&(f*=3,e.stateFlag_=s,u.vState_.push(e.clone()),u.vArState_.push(g[f],g[f+1],g[f+2]),u.nArState_.push(d[f],d[f+1],d[f+2])),e.replaceRingVertex(b,a);c[a]=k;f=3*a;g[f]=l;g[f+1]=m;g[f+2]=n;d[f]=p;d[f+1]=q;d[f+2]=r}c.pop()};Topology.prototype.adaptTopology=function(a,b){for(var c=this.mesh_,e=c.triangles_,g=c.vertexArray_,d=this.radiusSquared_,h=c.getVerticesFromTriangles(a),f=h.length,k=[],l=c.vertices_.length,m=0,n=0,m=this.center_,p=m[0],q=m[1],r=m[2],s=0,u=0,m=n=0;m<f;++m){var v=h[m];v>=l||(n=3*v,s=g[n]-p,u=g[n+1]-q,n=g[n+2]-r,s*s+u*u+n*n<d&&k.push(v))}this.checkCollisions(k,b);m=c.getTrianglesFromVertices(this.iVertsDecimated_);a.push.apply(a,m);c=[];g=a.length;d=e.length;++Triangle.tagMask_;h=Triangle.tagMask_;
for(m=0;m<g;++m)f=a[m],f>=d||(k=e[f],k.tagFlag_!==h&&(k.tagFlag_=h,c.push(f)));return c};
Topology.prototype.checkCollisions=function(a,b){var c=this.mesh_,e=c.vertices_,g=c.vertexArray_,d=0;this.iVertsDecimated_=[];this.iTrisToDelete_=[];this.iVertsToDelete_=[];var h=0.25*b,f=new Aabb,k=a.length;0<k&&(d=3*a[0],f.min_=[g[d],g[d+1],g[d+2]],f.max_=[g[d],g[d+1],g[d+2]]);for(var l=0,m=0,l=0;l<k;++l)d=3*a[l],f.expandsWithPoint(g[d],g[d+1],g[d+2]);var n=new Grid;n.setBoundaries(f);n.init(Math.sqrt(h));n.build(c,a);for(l=0;l<k;++l)if(f=a[l],d=e[f],!(0>d.tagFlag_)){var d=d.ringVertices_,p=d.length;
++Vertex.tagMask_;for(m=0;m<p;++m)e[d[m]].tagFlag_=Vertex.tagMask_;for(var d=3*f,q=g[d],r=g[d+1],s=g[d+2],u=n.getNeighborhood(q,r,s),v=u.length,m=0;m<v;++m){var t=u[m];if(f!==t){var w=e[t];if(!(0>w.tagFlag_||w.tagFlag_===Vertex.tagMask_)){var d=3*t,x=q-g[d],y=r-g[d+1],d=s-g[d+2];if(x*x+y*y+d*d<h){p>w.ringVertices_.length?this.vertexJoin(f,t):this.vertexJoin(t,f);break}}}}}this.applyDeletion();h=this.iVertsDecimated_=this.getValidModifiedVertices();k=h.length;g=[];n=Vertex.sculptMask_;for(l=0;l<k;++l)d=
h[l],e[d].sculptFlag_===n&&g.push(d);e=new Sculpt;e.mesh_=c;c.expandsVertices(g,1);e.smooth(g,1)};
Topology.prototype.vertexJoin=function(a,b){var c=this.mesh_,e=c.vertices_,g=c.vertexArray_,d=c.normalArray_,h=e[a],e=e[b],f=h.tIndices_,k=e.tIndices_,l=h.ringVertices_.slice(0),m=e.ringVertices_.slice(0),n=l.length,p=m.length,q=Mesh.stateMask_;this.states_.pushState(f,l);this.states_.pushState(k,m);f=this.states_.undos_[this.states_.curUndoIndex_];k=0;h.stateFlag_!==q&&(k=3*a,h.stateFlag_=q,f.vState_.push(h.clone()),f.vArState_.push(g[k],g[k+1],g[k+2]),f.nArState_.push(d[k],d[k+1],d[k+2]));e.stateFlag_!==
q&&(k=3*b,h.stateFlag_=q,f.vState_.push(e.clone()),f.vArState_.push(g[k],g[k+1],g[k+2]),f.nArState_.push(d[k],d[k+1],d[k+2]));g=[];d=[];this.trianglesRotate(h.tIndices_,a,g);if(this.adjustEdgeOrientation(g)&&(this.trianglesRotate(e.tIndices_,b,d),this.adjustEdgeOrientation(d))){l.sort(function(a,b){return a-b});m.sort(function(a,b){return a-b});q=Tools.intersectionArrays(l,m);0===q.length?this.connect1Ring(g,d):this.connect1RingCommonVertices(g,d,q);for(g=g=0;g<n;++g)c.computeRingVertices(l[g]);for(g=
0;g<p;++g)c.computeRingVertices(m[g]);this.iVertsDecimated_.push(a,b);this.iVertsToDelete_.push(a,b);h.tagFlag_=-1;e.tagFlag_=-1;this.cleanUpNeighborhood(l,m)}};
Topology.prototype.connect1RingCommonVertices=function(a,b,c){var e=this.mesh_,g=e.vertices_,d=e.triangles_,e=a.length,h=b.length,f=c.length,k=0;++Vertex.tagMask_;for(var l=Vertex.tagMask_,k=0;k<f;++k)g[c[k]].tagFlag_=l;for(var f=this.iTrisToDelete_,m=null,n=null,p=0,k=0;k<e;++k)m=g[a[k].v1],n=g[a[k].v2],m.tagFlag_===l&&n.tagFlag_===l&&(p=a[k].t,m.removeTriangle(p),n.removeTriangle(p),d[p].tagFlag_=-1,f.push(p));for(k=0;k<h;++k)m=g[b[k].v1],n=g[b[k].v2],m.tagFlag_===l&&n.tagFlag_===l&&(p=b[k].t,m.removeTriangle(p),
n.removeTriangle(p),d[p].tagFlag_=-1,f.push(p));d=[];f=[];d.push([]);f.push([]);this.matchEdgesCommonVertices(a,b,c[0]);for(k=0;k<e;++k)m=g[a[k].v1],n=g[a[k].v2],(m.tagFlag_!==l||n.tagFlag_!==l)&&d[d.length-1].push(a[k]),n.tagFlag_===l&&0!==d[d.length-1].length&&d.push([]);for(k=0;k<h;++k)m=g[b[k].v1],n=g[b[k].v2],(m.tagFlag_!==l||n.tagFlag_!==l)&&f[f.length-1].push(b[k]),n.tagFlag_===l&&0!==f[f.length-1].length&&f.push([]);0===d[d.length-1].length&&d.pop();0===f[f.length-1].length&&f.pop();b=d.length;
c=f.length-1;for(l=h=g=0;g<b||0<=c;)if(l=h=-1,g<b&&(h=d[g][0].v1),0<=c&&(l=f[c][f[c].length-1].v2),h===l)d[g].length>f[c].length?this.connectLinkedEdges(d[g],f[c]):this.connectLinkedEdges(f[c],d[g]),++g,--c;else for(k=0;k<e;++k)if(m=a[k].v1,m===h){this.connectLoop(d[g]);++g;break}else if(m===l){this.connectLoop(f[c]);--c;break}};
Topology.prototype.connect1Ring=function(a,b){var c=this.mesh_,e=c.vertices_,c=c.indexArray_;this.matchEdgesNearest(a,b);var g=a.length,d=b.length,h=d/g,f=0;g===d&&(f=-1);for(var k=0,l=0,k=0;k<g;++k)l=0,0!==k&&(l=Math.floor(d-h*k)),c[3*a[k].t+2]=b[l].v1,e[b[l].v1].tIndices_.push(a[k].t),l!==f&&(c[3*b[l].t+2]=a[k].v1,e[a[k].v1].tIndices_.push(b[l].t)),f=l};
Topology.prototype.connectLinkedEdges=function(a,b){var c=this.mesh_,e=c.vertices_,g=c.triangles_,c=c.indexArray_,d=a.length,h=b.length,f=b[0],k=f.t;e[f.v1].removeTriangle(k);e[f.v2].removeTriangle(k);var f=b[h-1],l=f.t;e[f.v1].removeTriangle(l);e[f.v2].removeTriangle(l);for(var f=h/d,m=0,n=0,p=0,n=0;n<d;++n)p=Math.floor(h-f*(n+1)),1>p&&(p=1),c[3*a[n].t+2]=b[p].v1,e[b[p].v1].tIndices_.push(a[n].t),p!==m&&p!==h-1&&(c[3*b[p].t+2]=a[n].v1,e[a[n].v1].tIndices_.push(b[p].t)),m=p;g[k].tagFlag_=-1;g[l].tagFlag_=
-1;this.iTrisToDelete_.push(k,l)};Topology.prototype.connectLoop=function(a){var b=this.mesh_,c=b.vertices_,e=b.indexArray_,g=a.length,d=a[0],h=d.t,f=d.v1;c[f].removeTriangle(h);c[d.v2].removeTriangle(h);c=c[f];for(d=1;d<g;++d){var k=a[d].t;e[3*k+2]=f;c.tIndices_.push(k)}b.triangles_[h].tagFlag_=-1;this.iTrisToDelete_.push(h)};
Topology.prototype.trianglesRotate=function(a,b,c){for(var e=this.mesh_.indexArray_,g=a.length,d=0,h=0,f=0,k=0,l=0;l<g;++l)d=3*a[l],h=e[d],f=e[d+1],k=e[d+2],k!==b&&(h===b?(e[d]=f,e[d+1]=k):(e[d+1]=h,e[d]=k),e[d+2]=b),c.push({v1:e[d],v2:e[d+1],t:a[l]})};
Topology.prototype.adjustEdgeOrientation=function(a){for(var b=a.length,c=0,e=-1,g=a[0].v1,d=0,h=0,d=0;d<b-1;d++){c=a[d].v2;e=-1;for(h=d+1;h<b;++h)if(a[h].v1===c)if(a[h].v2!==g)e=h;else{c=a[d+1];a[d+1]=a[h];a[h]=c;++d;d+1<b&&(g=a[d+1].v1);break}if(h===b){if(-1===e)return!1;c=a[d+1];a[d+1]=a[e];a[e]=c}}return!0};
Topology.prototype.matchEdgesCommonVertices=function(a,b,c){for(var e=a.length,g=-1,d=0,d=0;d<e;++d)if(a[d].v1===c){g=d;break}a.rotate(g);a=b.length;g=-1;for(d=0;d<a;++d)if(b[d].v1===c){g=d;break}b.rotate(g)};Topology.prototype.matchEdgesNearest=function(a,b){for(var c=this.mesh_.vertexArray_,e=0,g=3*a[0].v1,d=c[g],h=c[g+1],f=c[g+2],g=3*b[0].v1,k=d-c[g],l=h-c[g+1],g=f-c[g+2],m=k*k+l*l+g*g,n=b.length,p=1;p<n;++p)g=3*b[p].v1,k=d-c[g],l=h-c[g+1],g=f-c[g+2],k=k*k+l*l+g*g,k<m&&(m=k,e=p);b.rotate(e)};
Topology.prototype.cleanUpNeighborhood=function(a,b){for(var c=a.length,e=0,e=0;e<c;++e)this.cleanUpSingularVertex(a[e]);c=b.length;for(e=0;e<c;++e)this.cleanUpSingularVertex(b[e])};
Topology.prototype.cleanUpSingularVertex=function(a){var b=this.mesh_,c=b.vertices_,e=b.vertexArray_,g=b.normalArray_,d=b.indexArray_,h=c[a];if(!(0>h.tagFlag_)){var f=0,f=3*a,k=e[f],l=e[f+1],m=e[f+2],n=g[f],p=g[f+1],q=g[f+2];this.states_.pushState(h.tIndices_,h.ringVertices_);var r=Mesh.stateMask_,s=this.states_.undos_[this.states_.curUndoIndex_];h.stateFlag_!==r&&(h.stateFlag_=r,s.vState_.push(h.clone()),s.vArState_.push(k,l,m),s.nArState_.push(n,p,q));if(!this.deleteVertexIfDegenerate(a)){var u=
[];this.trianglesRotate(h.tIndices_,a,u);if(this.adjustEdgeOrientation(u)){for(var s=u.length,v=u[0].v1,t=-1,f=0,f=1;f<s-1;++f)if(u[f].v2===v){t=f;break}if(-1!==t){this.checkArrayLength(1);s=c.length;v=new Vertex(s);v.stateFlag_=r;f=3*s;e[f]=k;e[f+1]=l;e[f+2]=m;g[f]=-n;g[f+1]=-p;g[f+2]=-q;for(f=0;f<=t;++f)e=u[f].t,v.tIndices_.push(e),h.removeTriangle(e),d[3*e+2]=s;c.push(v);b.computeRingVertices(a);b.computeRingVertices(s);c=v.ringVertices_;d=c.length;for(f=0;f<d;++f)b.computeRingVertices(c[f]);h=
h.ringVertices_;c=h.length;for(f=0;f<c;++f)b.computeRingVertices(h[f]);this.iVertsDecimated_.push(a,s);h=[];h.push(a,s);f=new Sculpt;f.mesh_=b;f.smooth(h,1);this.cleanUpSingularVertex(a);this.cleanUpSingularVertex(s)}}}}};
Topology.prototype.deleteVertexIfDegenerate=function(a){var b=this.mesh_,c=b.vertices_,e=b.triangles_,g=b.indexArray_,d=c[a];if(0>d.tagFlag_)return!0;Tools.tidy(d.tIndices_);var h=d.tIndices_.length,f=0,k=f=0;if(0===h)return d.tagFlag_=-1,this.iVertsToDelete_.push(a),this.iVertsDecimated_.push(a),!0;if(1===h){var h=d.tIndices_[0],f=3*h,l=[];l.push(g[f],g[f+1],g[f+2]);Tools.tidy(l);g=l.length;for(f=0;f<g;++f)k=l[f],k!==a&&(c[k].removeTriangle(h),b.computeRingVertices(k));d.tagFlag_=-1;e[h].tagFlag_=
-1;this.iTrisToDelete_.push(h);this.iVertsToDelete_.push(a);this.iVertsDecimated_.push(a);for(f=0;f<g;++f)k=l[f],k!==a&&3>c[k].tIndices_.length&&this.deleteVertexIfDegenerate(k);return!0}if(2===h){h=d.tIndices_[0];f=3*h;l=[];l.push(g[f],g[f+1],g[f+2]);Tools.tidy(l);for(var m=l.length,f=0;f<m;++f)k=l[f],k!==a&&(c[k].removeTriangle(h),b.computeRingVertices(k));var n=d.tIndices_[1],f=3*n,p=[];p.push(g[f],g[f+1],g[f+2]);Tools.tidy(p);g=p.length;for(f=0;f<g;++f)k=p[f],k!==a&&(c[k].removeTriangle(n),b.computeRingVertices(k));
d.tagFlag_=-1;e[h].tagFlag_=-1;e[n].tagFlag_=-1;this.iTrisToDelete_.push(h,n);this.iVertsToDelete_.push(a);this.iVertsDecimated_.push(a);for(f=0;f<m;++f)k=l[f],k!==a&&3>c[k].tIndices_.length&&this.deleteVertexIfDegenerate(k);for(f=0;f<g;++f)k=p[f],k!==a&&3>c[k].tIndices_.length&&this.deleteVertexIfDegenerate(k);return!0}return!1};function Triangle(a){this.id_=a;this.normal_=[0,0,1];this.aabb_=new Aabb;this.posInLeaf_=this.leaf_=null;this.tagFlag_=1}Triangle.tagMask_=1;Triangle.prototype={clone:function(){var a=new Triangle(this.id_);a.normal_=this.normal_.slice();a.aabb_=this.aabb_.clone();a.leaf_=this.leaf_;a.posInLeaf_=this.posInLeaf_;return a}};function State(){this.nbVerticesState_=this.nbTrianglesState_=0;this.vArState_=[];this.nArState_=[];this.iArState_=[];this.vState_=[];this.tState_=[];this.aabbState_=new Aabb}function States(){this.mesh_=null;this.undos_=[];this.redos_=[];this.curUndoIndex_=0;this.firstState_=!1}
States.prototype={start:function(){++Mesh.stateMask_;var a=this.undos_;this.firstState_?a.length=0:10<a.length&&(a.shift(),--this.curUndoIndex_);this.firstState_=!1;this.redos_.length=0;if(a.length)for(var b=a.length-1;b!==this.curUndoIndex_;)a.pop(),--b;a.push(new State);this.curUndoIndex_=a.length-1;a=a[this.curUndoIndex_];b=this.mesh_;a.nbTrianglesState_=b.triangles_.length;a.nbVerticesState_=b.vertices_.length;a.aabbState_=b.octree_.aabbSplit_.clone()},pushState:function(a,b){this.pushStateTriangles(a);
this.pushStateVertices(b)},pushStateTriangles:function(a){for(var b=this.undos_[this.curUndoIndex_],c=b.iArState_,b=b.tState_,e=this.mesh_,g=e.indexArray_,d=e.triangles_,h=Mesh.stateMask_,f=a.length,e=0,k=b.length,e=0;e<f;++e){var l=d[a[e]];l.stateFlag_!==h&&(l.stateFlag_=h,b.push(l.clone()))}a=b.length;c.length=3*a;h=d=0;for(e=k;e<a;++e)h=3*b[e].id_,d=3*e,c[d]=g[h],c[d+1]=g[h+1],c[d+2]=g[h+2]},pushStateVertices:function(a){for(var b=this.undos_[this.curUndoIndex_],c=b.vArState_,e=b.nArState_,b=b.vState_,
g=this.mesh_,d=g.vertexArray_,h=g.normalArray_,f=g.vertices_,k=Mesh.stateMask_,l=a.length,g=0,m=b.length,g=0;g<l;++g){var n=f[a[g]];n.stateFlag_!==k&&(n.stateFlag_=k,b.push(n.clone()))}a=b.length;c.length=3*a;e.length=3*a;k=f=0;for(g=m;g<a;++g)k=3*b[g].id_,f=3*g,c[f]=d[k],c[f+1]=d[k+1],c[f+2]=d[k+2],e[f]=h[k],e[f+1]=h[k+1],e[f+2]=h[k+2]},undo:function(){if(this.undos_.length&&!this.firstState_){var a=new State,b=this.mesh_;a.nbTrianglesState_=b.triangles_.length;a.nbVerticesState_=b.vertices_.length;
a.aabbState_=b.octree_.aabbSplit_.clone();this.pushRedoTriangles(a);this.pushRedoVertices(a);this.pullUndoTriangles();this.pullUndoVertices();this.recomputeOctree(this.undos_[this.curUndoIndex_].aabbState_);b.updateBuffers();this.redos_.push(a);this.curUndoIndex_?(this.firstState_=!1,--this.curUndoIndex_):this.firstState_=!0}},pushRedoTriangles:function(a){var b=this.mesh_,c=b.indexArray_,e=b.triangles_,g=e.length,b=this.undos_[this.curUndoIndex_],d=b.tState_,h=d.length,f=b.nbTrianglesState_,b=a.iArState_;
a=a.tState_;var k=0,l=0;if(f<g){for(k=f;k<g;++k)a.push(e[k].clone());for(k=0;k<h;++k)l=d[k].id_,l<f&&a.push(e[l].clone());e.length=f}else{e.length=f;for(k=0;k<h;++k)l=d[k].id_,l<g&&a.push(e[l].clone())}e=a.length;b.length=3*e;for(k=g=0;k<e;++k)l=3*a[k].id_,g=3*k,b[g]=c[l],b[g+1]=c[l+1],b[g+2]=c[l+2]},pushRedoVertices:function(a){var b=this.mesh_,c=b.vertexArray_,e=b.normalArray_,g=b.vertices_,d=g.length,b=this.undos_[this.curUndoIndex_],h=b.vState_,f=h.length,k=b.nbVerticesState_,b=a.vArState_,l=
a.nArState_;a=a.vState_;var m=0,n=0;if(k<d){for(m=k;m<d;++m)a.push(g[m].clone());for(m=0;m<f;++m)n=h[m].id_,n<k&&a.push(g[n].clone());g.length=k}else{g.length=k;for(m=0;m<f;++m)n=h[m].id_,n<d&&a.push(g[n].clone())}g=a.length;b.length=3*g;l.length=3*g;for(m=d=0;m<g;++m)n=3*a[m].id_,d=3*m,b[d]=c[n],b[d+1]=c[n+1],b[d+2]=c[n+2],l[d]=e[n],l[d+1]=e[n+1],l[d+2]=e[n+2]},pullUndoTriangles:function(){for(var a=this.undos_[this.curUndoIndex_],b=this.mesh_,c=b.indexArray_,b=b.triangles_,e=a.tState_,g=a.iArState_,
a=a.nbTrianglesState_,d=e.length,h=0,f=0,k=0,h=0;h<d;++h)f=e[h],f.id_<a&&(k=f.id_,b[k]=f.clone(),k*=3,f=3*h,c[k]=g[f],c[k+1]=g[f+1],c[k+2]=g[f+2])},pullUndoVertices:function(){for(var a=this.undos_[this.curUndoIndex_],b=this.mesh_,c=b.vertexArray_,e=b.normalArray_,b=b.vertices_,g=a.vState_,d=a.vArState_,h=a.nArState_,a=a.nbVerticesState_,f=g.length,k=0,l=0,m=0,k=0;k<f;++k)l=g[k],l.id_<a&&(m=l.id_,b[m]=l.clone(),m*=3,l=3*k,c[m]=d[l],c[m+1]=d[l+1],c[m+2]=d[l+2],e[m]=h[l],e[m+1]=h[l+1],e[m+2]=h[l+2])},
redo:function(){if(this.redos_.length){var a=this.redos_[this.redos_.length-1],b=this.mesh_;b.triangles_.length=a.nbTrianglesState_;b.vertices_.length=a.nbVerticesState_;this.pullRedoTriangles();this.pullRedoVertices();this.recomputeOctree(a.aabbState_.clone());b.updateBuffers();this.firstState_?this.firstState_=!1:this.curUndoIndex_++;this.redos_.pop()}},pullRedoTriangles:function(){for(var a=this.redos_[this.redos_.length-1],b=a.iArState_,a=a.tState_,c=a.length,e=this.mesh_,g=e.indexArray_,e=e.triangles_,
d=0,h=0,f=0,d=0;d<c;++d)h=a[d],f=h.id_,e[f]=h.clone(),f*=3,h=3*d,g[f]=b[h],g[f+1]=b[h+1],g[f+2]=b[h+2]},pullRedoVertices:function(){for(var a=this.redos_[this.redos_.length-1],b=a.vArState_,c=a.nArState_,a=a.vState_,e=a.length,g=this.mesh_,d=g.vertexArray_,h=g.normalArray_,g=g.vertices_,f=0,k=0,l=0,f=0;f<e;++f)k=a[f],l=k.id_,g[l]=k.clone(),l*=3,k=3*f,d[l]=b[k],d[l+1]=b[k+1],d[l+2]=b[k+2],h[l]=c[k],h[l+1]=c[k+1],h[l+2]=c[k+2]},recomputeOctree:function(a){for(var b=this.mesh_,c=b.triangles_.length,
e=Array(c),g=0;g<c;++g)e[g]=g;++Triangle.tagMask_;b.octree_=new Octree;b.octree_.build(b,e,a)},reset:function(){this.mesh_=null;this.undos_=[];this.redos_=[];this.curUndoIndex_=0;this.firstState_=!1}};function Vertex(a){this.id_=a;this.tIndices_=[];this.ringVertices_=[];this.stateFlag_=this.sculptFlag_=this.tagFlag_=1}Vertex.tagMask_=1;Vertex.sculptMask_=1;
Vertex.prototype={clone:function(){var a=new Vertex(this.id_);a.tIndices_=this.tIndices_.slice();a.ringVertices_=this.ringVertices_.slice();a.tagFlag_=this.tagFlag_;a.sculptFlag_=this.sculptFlag_;a.stateFlag_=this.stateFlag_;return a},replaceTriangle:function(a,b){for(var c=this.tIndices_,e=c.length,g=0;g<e;++g)if(a===c[g]){c[g]=b;break}},replaceRingVertex:function(a,b){for(var c=this.ringVertices_,e=c.length,g=0;g<e;++g)if(a===c[g]){c[g]=b;break}},removeTriangle:function(a){for(var b=this.tIndices_,
c=b.length,e=0;e<c;++e)if(a===b[e]){b[e]=b[c-1];b.pop();break}},removeRingVertex:function(a){for(var b=this.ringVertices_,c=b.length,e=0;e<c;++e)if(a===b[e]){b[e]=b[c-1];b.pop();break}}};function SculptGL(){this.gl_=null;this.mouseButton_=this.sumDisplacement_=this.lastMouseY_=this.lastMouseX_=0;this.cameraTimer_=-1;this.states_=new States;this.camera_=new Camera;this.picking_=new Picking(this.camera_);this.sculpt_=new Sculpt(this.states_);this.mesh_=null;this.textures_={};this.shaders_={};this.ctrlNbTriangles_=this.ctrlNbVertices_=this.ctrlShaders_=this.ctrlColor_=null;this.resetSphere_=this.resetSphere;this.open_=this.openFile;this.save_=this.saveFile;this.undo_=this.onUndo;this.redo_=
this.onRedo;this.dummyFunc_=function(){}}SculptGL.elementIndexType=0;SculptGL.indexArrayType=Uint16Array;
SculptGL.prototype={start:function(){var a=this;$("#fileopen").change(function(b){a.loadFile(b)});this.initEvents();this.initWebGL();this.loadTextures();this.loadShaders();this.initGui();this.onWindowResize();this.resetSphere()},initEvents:function(){var a=this,b=$("#canvas");b.mousedown(function(b){a.onMouseDown(b)});b.mouseup(function(b){a.onMouseUp(b)});b.mousewheel(function(b,e){a.onMouseWheel(b,e)});b.mousemove(function(b){a.onMouseMove(b)});b.mouseout(function(b){a.onMouseOut(b)});b[0].addEventListener("webglcontextlost",
a.onContextLost,!1);b[0].addEventListener("webglcontextrestored",a.onContextRestored,!1);$(window).keydown(function(b){a.onKeyDown(b)});$(window).keyup(function(b){a.onKeyUp(b)});$(window).resize(function(b){a.onWindowResize(b)})},initWebGL:function(){try{this.gl_=$("#canvas")[0].getContext("webgl")||$("#canvas")[0].getContext("experimental-webgl")}catch(a){alert("Could not initialise WebGL.")}var b=this.gl_;b&&(b.getExtension("OES_element_index_uint")?(SculptGL.elementIndexType=b.UNSIGNED_INT,SculptGL.indexArrayType=
Uint32Array):(SculptGL.elementIndexType=b.UNSIGNED_SHORT,SculptGL.indexArrayType=Uint16Array),b.viewportWidth=$(window).width(),b.viewportHeight=$(window).height(),b.clearColor(0.2,0.2,0.2,1),b.enable(b.DEPTH_TEST),b.depthFunc(b.LEQUAL),b.blendFunc(b.SRC_ALPHA,b.ONE_MINUS_SRC_ALPHA),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT))},loadTextures:function(){var a=this.textures_;a.material1=new Image;a.material1.src="ressources/material1.jpg";a.material2=new Image;a.material2.src="ressources/material2.jpg"},
loadShaders:function(){var a=function(a){var b=new XMLHttpRequest;b.open("GET",a,!1);b.send(null);return b.responseText},b=this.shaders_;b.phongVertex=a("shaders/phongVertex.glsl");b.phongFragment=a("shaders/phongFragment.glsl");b.wireframeVertex=a("shaders/wireframeVertex.glsl");b.wireframeFragment=a("shaders/wireframeFragment.glsl");b.transparencyVertex=a("shaders/transparencyVertex.glsl");b.transparencyFragment=a("shaders/transparencyFragment.glsl");b.reflectionVertex=a("shaders/reflectionVertex.glsl");
b.reflectionFragment=a("shaders/reflectionFragment.glsl")},initGui:function(){var a=new dat.GUI;a.domElement.style.position="absolute";a.domElement.style.height="300px";this.initGeneralGui(a);a=new dat.GUI;this.initEditingGui(a)},initGeneralGui:function(a){var b=this,c=a.addFolder("Files (import/export)");c.add(this,"resetSphere_").name("Reset sphere");c.add(this,"open_").name("Load OBJ file");c.add(this,"save_").name("Save OBJ file");c.open();c=a.addFolder("Camera");c.add(this.camera_,"mode_",{Spherical:Camera.mode.SPHERICAL,
Plane:Camera.mode.PLANE}).name("Camera").onChange(function(a){b.camera_.updateMode(parseInt(a,10));b.render()});c.open();a=a.addFolder("History");a.add(this,"undo_").name("Undo (Ctrl+Z)");a.add(this,"redo_").name("Redo (Ctrl+Y)");a.open()},initEditingGui:function(a){var b=this,c=a.addFolder("Mesh");this.ctrlNbVertices_=c.add(this,"dummyFunc_").name("Ver : 0");this.ctrlNbTriangles_=c.add(this,"dummyFunc_").name("Tri : 0");var e={Phong:Render.mode.PHONG,"Wireframe (slow)":Render.mode.WIREFRAME,Transparency:Render.mode.TRANSPARENCY,
"Material 1":Render.mode.MATERIAL1,"Material 2":Render.mode.MATERIAL2};this.ctrlColor_=c.addColor(new Render,"color_").name("Color");this.ctrlColor_.onChange(function(){b.render()});this.ctrlShaders_=c.add(new Render,"shaderType_",e).name("Shader");this.ctrlShaders_.onChange(function(a){b.mesh_&&(b.mesh_.render_.updateShaders(parseInt(a,10),b.textures_,b.shaders_),b.mesh_.updateBuffers(),b.render())});c.open();c=a.addFolder("Sculpt");c.add(this.sculpt_,"tool_",{Brush:Sculpt.tool.BRUSH,Inflate:Sculpt.tool.INFLATE,
Rotate:Sculpt.tool.ROTATE,Smooth:Sculpt.tool.SMOOTH,Flatten:Sculpt.tool.FLATTEN}).name("Tool").onChange(function(a){b.sculpt_.tool_=parseInt(a,10)});c.add(this.sculpt_,"negative_").name("Negative");c.add(this.picking_,"rDisplay_",20,200).name("Radius");c.add(this.sculpt_,"intensity_",0,1).name("Intensity");c.open();a=a.addFolder("Topology");a.add(this.sculpt_,"topo_",{Static:Sculpt.topo.STATIC,Subdivision:Sculpt.topo.SUBDIVISION,Decimation:Sculpt.topo.DECIMATION,Uniformisation:Sculpt.topo.UNIFORMISATION,
"Adaptive (!!!)":Sculpt.topo.ADAPTIVE}).name("Tool").onChange(function(a){b.sculpt_.topo_=parseInt(a,10)});a.add(this.sculpt_,"detail_",0,1).name("Detail");a.open()},render:function(){var a=this.gl_;a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT);this.camera_.updateView();this.mesh_&&this.mesh_.render(this.camera_,this.picking_)},onWindowResize:function(){var a=$(window).width(),b=$(window).height();this.camera_.width_=a;this.camera_.height_=b;$("#canvas").attr("width",a);$("#canvas").attr("height",
b);var c=this.gl_;c.viewportWidth=a;c.viewportHeight=b;c.viewport(0,0,a,b);this.camera_.updateProjection();this.render()},onKeyDown:function(a){a.stopPropagation();var b=a.which;if(a.ctrlKey&&90===b)this.onUndo();else if(a.ctrlKey&&89===b)this.onRedo();else{if(37===b||81===b||65===b)this.camera_.moveX_=-1;else if(39===b||68===b)this.camera_.moveX_=1;if(38===b||90===b||87===b)this.camera_.moveZ_=-1;else if(40===b||83===b)this.camera_.moveZ_=1;var c=this;-1===this.cameraTimer_&&(this.cameraTimer_=setInterval(function(){c.camera_.updateTranslation();
c.render()},20))}},onKeyUp:function(a){a.stopPropagation();a=a.which;if(37===a||81===a||65===a||39===a||68===a)this.camera_.moveX_=0;if(38===a||90===a||87===a||40===a||83===a)this.camera_.moveZ_=0;-1!==this.cameraTimer_&&(0===this.camera_.moveX_&&0===this.camera_.moveZ_)&&(clearInterval(this.cameraTimer_),this.cameraTimer_=-1)},onMouseDown:function(a){a.stopPropagation();a.preventDefault();var b=a.pageX,c=a.pageY;a=this.mouseButton_=a.which;1===a?this.camera_.start(b,c):3===a&&this.mesh_&&(this.states_.start(),
this.sculpt_.tool_===Sculpt.tool.ROTATE&&this.sculpt_.startRotate(this.picking_,b,c))},onMouseUp:function(a){a.stopPropagation();a.preventDefault();this.mesh_&&this.mesh_.checkLeavesUpdate();this.mouseButton_=0},onMouseWheel:function(a,b){a.stopPropagation();a.preventDefault();this.camera_.zoom(b/100);this.render()},onMouseMove:function(a){a.stopPropagation();a.preventDefault();var b=a.pageX;a=a.pageY;this.mesh_&&3!==this.mouseButton_&&this.picking_.intersectionMouseMesh(this.mesh_,b,a);1===this.mouseButton_?
this.camera_.rotate(b,a):2===this.mouseButton_?this.camera_.translate((b-this.lastMouseX_)/3E3,(a-this.lastMouseY_)/3E3):3===this.mouseButton_&&(this.sculpt_.tool_!==Sculpt.tool.ROTATE?this.sculptStroke(b,a):this.picking_.mesh_&&(this.picking_.pickVerticesInSphere(this.picking_.rWorldSqr_),this.sculpt_.sculptMesh(this.picking_,b,a,this.lastMouseX_,this.lastMouseY_)),this.mesh_.updateBuffers(),this.ctrlNbVertices_.name("Ver : "+this.mesh_.vertices_.length),this.ctrlNbTriangles_.name("Tri : "+this.mesh_.triangles_.length));
this.lastMouseX_=b;this.lastMouseY_=a;this.render()},sculptStroke:function(a,b){var c=this.picking_,e=a-this.lastMouseX_,g=b-this.lastMouseY_,d=Math.sqrt(e*e+g*g);this.sumDisplacement_+=d;var h=0.2*c.rDisplay_,f=d/Math.floor(d/h),e=e/d,g=g/d;a=this.lastMouseX_;b=this.lastMouseY_;if(this.sumDisplacement_>50*h)this.sumDisplacement_=0;else if(this.sumDisplacement_>h)for(h=this.sumDisplacement_=0;h<d;h+=f){c.intersectionMouseMesh(this.mesh_,a,b);if(!c.mesh_)break;c.pickVerticesInSphere(c.rWorldSqr_);
this.sculpt_.sculptMesh(c);a+=e*f;b+=g*f}},onMouseOut:function(){this.mouseButton_=0},onContextLost:function(){alert("shit happens : context lost")},onContextRestored:function(){alert("context is restored")},loadFile:function(a){a.stopPropagation();a.preventDefault();if(0!==a.target.files.length&&(a=a.target.files[0],a.name.endsWith(".obj"))){var b=new FileReader,c=this;b.onload=function(a){c.startMeshLoad();Files.loadOBJ(a.target.result,c.mesh_);c.endMeshLoad()};b.readAsText(a)}},resetSphere:function(){this.startMeshLoad();
Files.loadOBJ(sphereOBJ,this.mesh_);this.endMeshLoad()},startMeshLoad:function(){this.mesh_=new Mesh(this.gl_);this.states_.reset();this.states_.mesh_=this.mesh_;this.sculpt_.mesh_=this.mesh_;Mesh.stateMask_=1;Vertex.tagMask_=1;Vertex.sculptMask_=1;Triangle.tagMask_=1},endMeshLoad:function(){var a=this.mesh_;a.initMesh(this.textures_,this.shaders_);a.moveTo([0,0,0]);a=vec3.dist(a.octree_.aabbLoose_.max_,a.octree_.aabbLoose_.min_);this.camera_.reset();this.camera_.globalScale_=a;this.camera_.zoom(-0.4);
this.updateGuiMesh();this.render()},updateGuiMesh:function(){if(this.mesh_){var a=this.mesh_;this.ctrlColor_.object=a.render_;this.ctrlColor_.updateDisplay();this.ctrlShaders_.object=a.render_;this.ctrlShaders_.updateDisplay();this.ctrlNbVertices_.name("Ver : "+a.vertices_.length);this.ctrlNbTriangles_.name("Tri : "+a.triangles_.length)}},openFile:function(){$("#fileopen").trigger("click")},saveFile:function(){if(this.mesh_){var a=[Files.exportOBJ(this.mesh_)],a=new Blob(a,{type:"text/plain;charset=utf-8"});
saveAs(a,"yourMesh.obj")}},onUndo:function(){this.states_.undo();this.render();this.updateGuiMesh()},onRedo:function(){this.states_.redo();this.render();this.updateGuiMesh()}};var sphereOBJ="usemtl (null)\ns 0\nv 17.761637 81.830338 54.665531\nv 14.610837 83.503944 53.043510\nv 15.531935 80.149025 57.748539\nv 8.740980 86.202934 49.926430\nv 9.091905 81.924339 56.619255\nv 11.397886 77.199341 62.532803\nv -6.885294 91.210991 40.412220\nv -6.735098 86.497765 49.727001\nv 1.361126 88.949226 45.674747\nv -5.239993 80.751396 58.751640\nv 1.523665 84.217422 53.899010\nv 0.202741 67.214928 74.041290\nv 6.148447 72.831055 68.248329\nv -3.011926 74.250275 66.916542\nv 3.298509 78.836609 61.432148\nv -44.379311 88.988342 10.561888\nv -45.020893 86.525627 22.055285\nv -35.053474 91.680542 19.129354\nv -44.757713 82.658440 34.122276\nv -35.183395 88.491913 30.517382\nv -25.274712 92.851471 27.199154\nv -41.725616 69.569603 58.472595\nv -32.673492 77.644699 53.886398\nv -43.923668 76.815445 46.584324\nv -24.171152 83.696541 49.098305\nv -34.288029 83.945320 42.160572\nv -15.679537 92.576569 34.405411\nv -15.626059 88.283997 44.291790\nv -25.230534 88.977142 38.032742\nv -27.443737 31.726650 90.775894\nv -20.462553 42.324112 88.260719\nv -31.711044 41.430027 85.310974\nv -13.177989 52.032558 84.373894\nv -24.230679 51.580151 82.172760\nv -35.856480 51.209839 78.050407\nv -9.796476 68.194206 72.481567\nv -6.195831 60.447491 79.421112\nv -19.947823 69.185463 69.393486\nv -16.876907 60.637920 77.705948\nv -39.078136 60.724670 69.176697\nv -30.499725 69.858864 64.726402\nv -27.540371 61.006054 74.295288\nv -14.188861 82.612129 54.533600\nv -22.213608 77.072723 59.718948\nv -12.202863 75.709419 64.180786\nv -80.523453 44.018173 -39.728756\nv -82.804672 42.444275 -36.631546\nv -79.704300 47.317425 -37.527122\nv -86.310333 39.639061 -31.293297\nv -82.631477 46.789036 -31.350046\nv -78.019287 52.871300 -33.430759\nv -93.666237 31.095835 -16.114670\nv -89.892914 40.681999 -16.255373\nv -90.174271 35.778534 -24.258923\nv -84.695526 50.183315 -17.558502\nv -86.219383 44.480431 -24.242725\nv -71.836739 66.009254 -21.960447\nv -75.512497 59.137558 -28.295067\nv -78.578377 58.767136 -19.283741\nv -81.240509 52.325432 -25.729910\nv -96.941795 4.989405 24.029043\nv -95.656372 16.734911 23.870504\nv -98.316925 12.340117 13.472359\nv -92.667961 29.349081 23.479345\nv -96.208809 23.994043 12.967293\nv -98.062653 19.379950 2.851627\nv -81.521744 54.259270 20.251873\nv -87.106766 48.036720 10.241386\nv -88.099861 41.830151 22.105488\nv -90.766670 41.948639 1.312149\nv -92.513641 36.026489 11.971565\nv -96.366364 25.724186 -7.196383\nv -93.017883 35.944630 -7.460339\nv -95.192886 30.534010 2.447021\nv -53.004173 84.776138 1.887888\nv -54.269547 82.927826 13.333914\nv -60.582886 79.272156 -6.755573\nv -62.300381 78.101868 4.331409\nv -64.056610 75.069794 16.164089\nv -74.596504 65.499741 -12.047691\nv -66.875313 72.873856 -14.734068\nv -77.455772 63.217358 -2.041786\nv -69.182274 72.085419 -4.184193\nv -73.253487 65.561020 18.321533\nv -79.958405 59.438065 8.588989\nv -71.513542 69.597031 6.485889\nv -88.064789 46.551155 -8.808132\nv -84.804604 52.990673 -0.408997\nv -81.725861 56.690872 -10.345491\nv -56.426918 -37.041801 73.782837\nv -55.681210 -33.724171 75.909714\nv -59.630905 -35.240135 72.126892\nv -54.173420 -27.661240 79.373138\nv -60.209995 -28.905941 74.425812\nv -65.124184 -31.871841 68.869644\nv -48.760883 -11.061226 86.602684\nv -57.366577 -12.636923 80.928261\nv -51.905190 -19.950060 83.113457\nv -65.333488 -15.282677 74.148323\nv -59.416241 -21.420330 77.529869\nv -77.896927 -22.255053 58.624065\nv -71.473763 -27.457138 64.324219\nv -72.482292 -18.378859 66.396797\nv -66.055473 -23.799664 71.205681\nv -38.552544 30.280128 87.159706\nv -34.040157 20.627851 91.737450\nv -49.905464 27.983883 82.014305\nv -44.874668 18.780729 87.370186\nv -39.922901 9.347818 91.207344\nv -71.824059 21.469952 66.184181\nv -66.144119 12.738831 73.909927\nv -61.349731 25.259148 74.821030\nv -60.198471 4.788091 79.707069\nv -55.621830 16.026196 81.543686\nv -44.876064 -1.429758 89.353752\nv -54.091682 -3.057643 84.052017\nv -50.118584 7.510926 86.207375\nv -93.941315 -2.450396 34.190987\nv -93.388199 9.171913 34.561836\nv -89.454483 -9.727516 43.626472\nv -89.539734 1.621435 44.497276\nv -88.032181 13.674307 45.424088\nv -78.646362 -12.403391 60.505405\nv -83.895645 -16.444849 51.875683\nv -77.783165 -1.942074 62.817261\nv -84.530884 -5.825960 53.109200\nv -80.872368 17.673168 56.100967\nv -75.549561 9.244902 64.859810\nv -83.470680 5.346620 54.809296\nv -63.251274 -5.938993 77.226967\nv -69.550262 1.419164 71.838333\nv -71.671005 -9.120614 69.138123\nv -55.012192 79.564354 25.360825\nv -73.873810 59.932270 30.834772\nv -64.320564 64.609848 41.090561\nv -64.794960 70.664261 28.428438\nv -53.528309 67.693428 50.520493\nv -54.700890 74.660126 37.863949\nv -91.291138 21.552374 34.661564\nv -76.525482 30.857796 56.494663\nv -80.015045 39.528831 45.111679\nv -84.986816 26.247778 45.697872\nv -81.570366 47.553425 32.938522\nv -87.362259 34.583260 34.232059\nv -43.282112 40.068306 80.753883\nv -50.899281 59.383041 62.313068\nv -59.263817 47.512230 65.041435\nv -47.566959 49.905182 72.435196\nv -66.410835 34.805321 66.167892\nv -54.959000 37.745655 74.530365\nv -72.905197 52.638264 43.749798\nv -70.388268 44.129959 55.660019\nv -62.516426 56.659317 53.678841\nv 80.621582 -43.953907 39.600670\nv 81.270622 -40.636627 41.758217\nv 78.276443 -45.414040 42.548351\nv 82.029678 -34.616447 45.528374\nv 77.803619 -40.963257 47.629906\nv 73.756409 -47.843990 47.654442\nv 82.175301 -17.792360 54.135487\nv 77.338417 -26.334631 57.665031\nv 82.441162 -26.866766 49.815979\nv 71.947250 -35.445522 59.726105\nv 77.677437 -34.557129 52.649990\nv 60.137108 -52.995651 59.791214\nv 67.634552 -50.501064 53.620972\nv 65.862999 -44.558582 60.634960\nv 72.625748 -42.453060 54.066971\nv 69.498055 26.737247 66.746841\nv 66.417854 17.106010 72.773987\nv 74.624237 14.999893 64.855431\nv 62.271114 6.324398 77.989159\nv 71.025909 5.087635 70.209946\nv 78.480194 3.232719 61.890289\nv 49.702881 -17.474718 84.995636\nv 60.458099 -17.307001 77.751434\nv 56.418823 -5.359695 82.390472\nv 69.142990 -16.953224 70.227013\nv 66.458725 -5.765373 74.498306\nv 80.952110 -7.911854 58.173523\nv 76.461670 -16.808908 62.217949\nv 74.318748 -6.401264 66.601395\nv 16.935570 -57.261696 80.213997\nv 29.318119 -57.426399 76.437271\nv 24.983177 -49.212170 83.390663\nv 41.016644 -56.649620 71.473465\nv 37.250412 -48.882229 78.885574\nv 33.302658 -39.491089 85.623512\nv 57.882206 -46.409939 67.050484\nv 51.439327 -55.076046 65.731453\nv 55.827187 -38.185158 73.656075\nv 48.287346 -48.072235 73.194199\nv 41.674286 -29.053204 86.134575\nv 53.273689 -28.604584 79.647293\nv 45.393372 -39.398647 79.919884\nv 71.081398 -26.917559 64.983688\nv 62.996258 -27.803974 72.514900\nv 64.688080 -37.056160 66.650520\nv 21.070837 79.977341 56.210732\nv 19.324718 76.288071 61.698357\nv 26.638737 76.429779 58.727043\nv 10.493948 66.646736 73.811165\nv 21.209404 66.292824 71.801277\nv 15.648071 71.917252 67.698204\nv 40.506683 65.354095 63.937866\nv 33.125965 71.662231 61.377487\nv 31.370068 65.680817 68.570770\nv 24.730408 71.605469 65.276833\nv -15.911055 32.785492 93.123306\nv -3.000360 33.258804 94.259483\nv -8.702526 43.207783 89.762764\nv 24.290308 33.481972 91.043610\nv 17.089287 43.971363 88.172989\nv 10.336532 33.703522 93.580063\nv 10.580406 52.556374 84.414940\nv 3.912574 43.735188 89.843895\nv 4.594491 60.277687 79.658585\nv -1.690680 52.382748 85.165657\nv 63.163025 37.986122 67.583191\nv 60.466782 28.807890 74.255463\nv 55.939064 48.480549 67.234344\nv 53.756691 39.934608 74.266037\nv 49.764946 30.529743 81.187347\nv 38.673111 58.433964 71.343292\nv 48.249054 57.616264 65.972687\nv 35.124256 51.245090 78.359604\nv 46.264790 49.883919 73.288223\nv 37.721920 32.278320 86.805344\nv 30.243538 43.139656 84.995880\nv 42.658539 41.831425 80.189667\nv 16.279646 60.241184 78.140732\nv 23.018250 52.359566 82.028259\nv 27.975616 59.568069 75.292831\nv -53.167892 -38.764481 75.302658\nv -47.218479 -41.650341 77.689522\nv -49.924835 -34.457623 79.499573\nv -30.484707 -48.241409 82.118828\nv -34.203354 -39.257805 85.375389\nv -39.712284 -44.865490 80.063499\nv -38.884090 -29.741249 87.197960\nv -42.820812 -36.551567 82.645996\nv -43.733509 -19.890493 87.702606\nv -46.958843 -28.046036 83.715500\nv 12.173878 -48.509964 86.594345\nv 4.273468 -56.137722 82.645592\nv 6.620396 -38.569359 92.024857\nv -0.786404 -46.997459 88.264496\nv -8.257538 -54.113586 83.687111\nv -5.333004 -14.423601 98.810524\nv -12.290365 -25.087194 96.018646\nv 0.669079 -26.992577 96.285782\nv -18.493628 -34.353165 92.075211\nv -6.416733 -36.663715 92.814865\nv -19.939600 -51.404057 83.426819\nv -24.170395 -42.281052 87.339020\nv -13.011753 -44.760258 88.471542\nv -22.847942 21.593365 94.929970\nv -29.231394 10.202126 95.086494\nv -17.388210 10.275952 97.939041\nv -39.773586 -10.881519 91.102432\nv -29.709190 -11.848301 94.746933\nv -35.083214 -0.678372 93.641380\nv -11.818838 -1.907288 99.280800\nv -18.509212 -13.222995 97.378448\nv -24.252792 -1.136761 97.007782\nv -29.505865 -32.098885 89.994804\nv -24.319515 -23.298599 94.158035\nv -34.842411 -21.345100 91.270981\nv 56.476654 18.659773 80.387802\nv 31.604446 21.348501 92.441338\nv 38.601997 8.347187 91.870621\nv 44.778919 20.037970 87.139702\nv 44.526962 -4.833874 89.409073\nv 51.343388 7.345514 85.497955\nv -10.466923 22.093929 96.965477\nv 2.029217 -2.731169 99.942101\nv 9.656418 9.836962 99.045387\nv -4.529308 10.156288 99.379745\nv 17.328434 21.957796 96.008232\nv 3.140886 22.159744 97.463226\nv 20.245880 -39.365707 89.668533\nv 36.946194 -17.241684 91.311028\nv 22.907513 -16.733824 95.891739\nv 28.581598 -28.773487 91.406662\nv 8.541672 -15.654346 98.397064\nv 14.669971 -28.247250 94.799179\nv 24.400791 9.015440 96.557358\nv 16.590862 -3.461306 98.553345\nv 31.060028 -4.242853 94.959320\nv -78.163170 45.480797 -42.685085\nv -75.370720 51.527779 -40.793884\nv -73.689713 47.876549 -47.724854\nv -68.992126 65.011993 -31.835960\nv -66.113113 62.324188 -41.770214\nv -72.524658 58.087250 -36.960033\nv -60.140427 52.994701 -59.788715\nv -67.614594 50.508724 -53.638920\nv -63.091042 58.280575 -51.214203\nv -69.807175 55.150467 -45.666023\nv -43.163189 90.197906 -1.129660\nv -41.358978 90.020737 -13.627245\nv -51.497856 85.146828 -9.898922\nv -35.141273 84.562073 -40.178932\nv -46.638069 81.244690 -34.988438\nv -38.530067 88.267265 -26.913258\nv -56.056652 77.181046 -30.012283\nv -49.343304 84.072777 -22.293667\nv -64.432617 72.179688 -25.269157\nv -58.552963 79.019089 -18.097889\nv -16.935570 57.261696 -80.213997\nv -29.318119 57.426399 -76.437271\nv -21.518631 65.173805 -72.727730\nv -41.016983 56.649582 -71.473297\nv -33.790798 64.821159 -68.237816\nv -26.053795 72.887611 -63.313469\nv -54.694595 61.069633 -57.262543\nv -51.440155 55.075882 -65.730942\nv -49.102325 69.169464 -52.957966\nv -45.001106 63.212402 -63.080044\nv -30.763802 79.319321 -52.555046\nv -42.771324 77.038185 -47.283524\nv -38.462364 71.330788 -58.588097\nv -61.781448 69.652252 -36.491322\nv -53.025391 73.751488 -41.821358\nv -58.431019 65.858490 -47.418095\nv 20.092344 83.223000 51.674267\nv 23.983332 85.427963 46.117939\nv 16.256924 86.605354 47.278179\nv 33.735123 89.102814 30.374821\nv 23.773033 91.690697 32.057129\nv 28.656401 87.549950 38.907806\nv 13.342423 92.892265 34.539928\nv 19.471611 89.396622 40.362141\nv 2.682613 92.780144 37.210857\nv 10.263555 89.933846 42.503670\nv 52.562489 83.998947 -13.467152\nv 42.548923 89.790085 -11.284097\nv 48.540779 87.413338 -1.643945\nv 30.801306 94.733200 -8.769267\nv 38.117004 92.447212 0.780215\nv 43.839180 89.316521 10.034283\nv 4.533440 99.867409 -2.439194\nv 13.646214 98.836533 6.717193\nv 18.227127 98.166084 -5.585053\nv 21.756714 96.425018 15.128149\nv 26.263166 96.424316 3.549183\nv 38.757645 89.782867 20.901737\nv 28.683044 93.052948 22.769112\nv 33.350220 93.472641 12.273060\nv -33.890091 93.766785 7.697630\nv -24.166342 95.673630 16.203274\nv -21.961998 97.462753 4.322533\nv -5.536205 94.858040 31.165707\nv -2.772823 97.693253 21.173975\nv -14.691780 95.893852 24.259426\nv -9.101963 99.576698 1.278999\nv 0.699217 99.469238 10.265525\nv -12.233498 98.333321 13.449858\nv 17.432846 95.078064 25.617554\nv 9.566462 97.842278 18.313213\nv 5.688915 95.692154 28.471840\nv 56.572945 36.962093 -73.710960\nv 53.118317 38.789879 -75.324562\nv 57.254330 40.233501 -71.436729\nv 47.231232 41.644493 -77.684914\nv 52.317818 44.915047 -72.425713\nv 58.194225 45.834663 -67.176003\nv 30.180597 48.342514 -82.171364\nv 36.999168 53.176346 -76.179626\nv 39.351570 45.008503 -80.160378\nv 44.718227 56.619919 -69.242073\nv 45.473854 49.257599 -74.201195\nv 59.244766 59.308033 -54.521690\nv 58.928555 52.227596 -61.641727\nv 52.085590 58.837681 -61.848351\nv 52.168182 51.571774 -67.961990\nv -8.691296 64.554710 -75.875885\nv -4.273468 56.137722 -82.645592\nv 0.455959 71.171104 -70.245750\nv 4.215252 62.794632 -77.711426\nv 8.257923 54.113510 -83.687126\nv 20.369743 81.705032 -53.938499\nv 23.107203 73.523605 -63.720776\nv 10.224438 77.180527 -62.758476\nv 25.218424 65.335960 -71.380966\nv 13.377861 68.734619 -71.390373\nv 19.949772 51.401344 -83.426071\nv 27.319635 56.736061 -77.683044\nv 16.361938 60.179802 -78.170830\nv 55.631317 79.218834 -25.090502\nv 46.013729 85.656219 -23.361256\nv 57.818928 73.171593 -36.095554\nv 48.957165 80.007339 -34.670174\nv 38.736526 85.898376 -33.480587\nv 51.659832 66.267799 -54.220284\nv 58.945198 66.427444 -45.965813\nv 42.774261 72.139252 -54.463669\nv 50.718201 73.418587 -45.137291\nv 29.799910 84.740128 -43.944016\nv 32.407417 77.254936 -54.602516\nv 41.227345 79.356110 -44.753925\nv 35.787640 61.008381 -70.691032\nv 34.288059 69.260719 -63.460861\nv 44.113052 64.293488 -62.612980\nv -31.875843 94.668236 -4.675091\nv -5.453434 99.132866 -11.955570\nv -15.899628 96.245804 -21.998846\nv -19.190159 97.778511 -8.432150\nv -25.770218 91.295074 -31.640244\nv -29.281189 93.935997 -17.850538\nv 35.144173 91.175018 -21.260368\nv 16.715874 89.077530 -42.258404\nv 13.045952 94.756027 -29.173613\nv 26.510195 91.037125 -31.771849\nv 8.846870 98.388184 -15.540188\nv 22.442678 95.621521 -18.784393\nv -12.998886 72.753601 -67.364250\nv -21.895348 86.583038 -44.988571\nv -7.705280 86.772629 -49.103371\nv -17.392105 80.325050 -56.968414\nv 6.555000 85.204353 -51.935055\nv -3.546467 79.494781 -60.564037\nv -1.479080 96.541306 -26.030554\nv 2.590256 91.821495 -39.523468\nv -11.891525 92.546852 -35.967648\nv 26.552082 81.013405 52.266777\nv 40.940037 71.992737 56.044262\nv 39.791821 78.433693 47.589565\nv 33.489334 77.200760 54.023205\nv 37.452080 84.306587 38.597168\nv 31.967587 82.652466 46.331882\nv 71.585770 36.060005 59.792580\nv 72.587746 45.558403 51.531059\nv 64.554367 47.120903 60.102863\nv 70.670776 63.784782 30.612803\nv 63.606331 65.051346 41.503712\nv 72.463516 54.961243 41.572811\nv 56.511032 65.298302 50.424530\nv 64.814957 56.225586 51.358593\nv 48.873199 65.061974 58.123573\nv 56.886730 56.881073 59.400711\nv 58.227509 81.224922 -3.474028\nv 53.753372 83.893135 8.515660\nv 63.630093 76.781631 7.469390\nv 42.989685 85.218529 29.827621\nv 52.242798 79.764511 30.138214\nv 48.398895 85.269295 19.664530\nv 67.697441 71.130615 18.907467\nv 61.446198 72.740501 30.548069\nv 57.960510 79.160873 19.342546\nv 47.861961 72.723053 49.199509\nv 54.795647 73.127380 40.618011\nv 45.862297 79.594315 39.514500\nv 82.920280 -42.359768 36.467480\nv 86.339043 -39.613770 31.246115\nv 85.017059 -36.187576 38.243397\nv 93.569504 -31.250324 16.377361\nv 92.827934 -26.929779 25.646843\nv 90.041107 -35.930752 24.530045\nv 90.529663 -23.304647 35.514393\nv 88.969223 -31.819365 32.741459\nv 86.884735 -19.928646 45.319870\nv 86.400253 -28.701878 41.366642\nv 96.941795 -4.989405 -24.029043\nv 99.113174 -0.740810 -13.267580\nv 98.316956 -12.340618 -13.471621\nv 99.911499 4.033298 -1.193251\nv 99.632309 -8.213036 -2.438843\nv 98.063034 -19.377462 -2.855473\nv 96.083351 12.828091 24.564827\nv 97.575050 0.594044 21.880503\nv 98.993378 8.357796 11.421816\nv 97.488419 -10.967386 19.383539\nv 99.473862 -3.958588 9.448835\nv 96.368843 -25.717821 7.186052\nv 96.155327 -21.481640 17.108198\nv 98.539116 -15.115026 7.847132\nv 77.512276 24.252491 58.340931\nv 82.025612 12.249557 55.872597\nv 84.986961 21.288284 48.208145\nv 86.507034 -10.238314 49.109154\nv 90.548073 -2.937630 42.336941\nv 84.884605 0.524529 52.861404\nv 91.247284 17.337978 37.058441\nv 93.859245 4.604279 34.194168\nv 88.491837 8.620193 45.769936\nv 94.331894 -17.639297 28.113125\nv 94.774460 -7.034180 31.117893\nv 91.016136 -13.787027 39.063789\nv 59.773422 35.157352 -72.049278\nv 62.669552 39.269329 -67.308578\nv 65.213531 31.813854 -68.811874\nv 65.766510 51.327511 -55.138481\nv 71.167625 42.161346 -56.192436\nv 64.546005 44.911034 -61.780331\nv 77.895134 22.256630 -58.625843\nv 71.501862 27.436157 -64.301956\nv 75.274414 32.339840 -57.340199\nv 68.887924 36.409950 -62.679893\nv 61.918617 76.976555 -15.514380\nv 70.817596 68.361252 -17.652391\nv 64.443634 71.489059 -27.135441\nv 86.385666 45.617401 -21.367485\nv 79.983917 51.253590 -31.235281\nv 79.275429 57.748772 -19.506027\nv 73.286041 55.421890 -39.466064\nv 72.701279 62.164936 -29.155514\nv 66.139816 58.398735 -47.064972\nv 65.887543 65.098923 -37.695644\nv 93.941315 2.450396 -34.190987\nv 96.871765 6.888809 -23.841206\nv 89.454285 9.727810 -43.626846\nv 93.002228 14.332016 -33.840511\nv 95.272568 19.689522 -23.140024\nv 81.832893 27.057014 -50.707916\nv 83.895317 16.445211 -51.876118\nv 84.509346 32.928368 -42.117607\nv 87.817123 20.966125 -42.995037\nv 91.801315 32.678009 -22.464729\nv 86.058578 39.210518 -32.503166\nv 90.401695 26.585518 -33.477509\nv 72.567993 48.629135 -48.673340\nv 79.524406 44.530449 -41.144951\nv 77.928986 37.915459 -49.894783\nv 79.596176 33.682690 50.298374\nv 92.622131 26.443859 26.867504\nv 87.022934 39.983143 28.781214\nv 86.777229 30.558613 39.190342\nv 79.635956 52.600136 29.855316\nv 80.358032 43.256065 40.883976\nv 98.525436 11.786846 -12.401943\nv 91.637787 38.766556 -9.983379\nv 95.217285 30.509968 1.676691\nv 96.128387 25.083542 -11.408276\nv 96.643219 21.889294 13.451643\nv 98.550552 16.963140 0.200188\nv 67.877167 73.261421 -5.045184\nv 77.050293 61.098335 18.172699\nv 81.966187 57.080753 4.830336\nv 73.138725 67.905968 6.285403\nv 85.180191 51.710915 -8.385410\nv 76.953857 63.496700 -6.802453\nv 92.102325 35.805553 15.333763\nv 89.582870 44.308365 3.417223\nv 85.466026 49.072662 16.953825\nv -19.960608 -83.370064 -51.487926\nv -20.885159 -80.031044 -56.203583\nv -17.761637 -81.830338 -54.665531\nv -26.291071 -81.089958 -52.279999\nv -26.563910 -76.451622 -58.732506\nv -23.905434 -85.447983 -46.121296\nv -33.450813 -71.434227 -61.467014\nv -41.110504 -71.874504 -56.071217\nv -40.812462 -65.096214 -64.006454\nv -33.520119 -77.234177 -53.956306\nv -39.791821 -78.433693 -47.589565\nv -37.400078 -84.180740 -38.920906\nv -28.663748 -87.553574 -38.894226\nv -33.726700 -89.102730 -30.384384\nv -31.755976 -82.664307 -46.456112\nv -63.206944 -38.026424 -67.519440\nv -71.615181 -35.997963 -59.794762\nv -69.498055 -26.737238 -66.746841\nv -64.613205 -47.095352 -60.059654\nv -72.587746 -45.558403 -51.531059\nv -55.952621 -48.485935 -67.219177\nv -72.527840 -54.967960 -41.451599\nv -63.646538 -65.052444 -41.440292\nv -70.670776 -63.784782 -30.612803\nv -64.713684 -56.229919 -51.481396\nv -56.510056 -65.293297 -50.432121\nv -48.904259 -65.033310 -58.129528\nv -48.282326 -57.629028 -65.937180\nv -56.888783 -56.876827 -59.402813\nv -58.319977 -81.161026 3.415864\nv -48.613922 -87.373154 1.618407\nv -52.562489 -83.998947 13.467152\nv -53.652695 -83.971184 -8.380270\nv -43.856323 -89.306808 -10.045746\nv -63.636799 -76.777977 -7.449927\nv -38.799049 -89.760078 -20.922791\nv -43.076801 -85.132881 -29.946283\nv -48.528484 -85.185326 -19.709076\nv -52.276115 -79.755501 -30.104284\nv -61.451691 -72.741173 -30.535412\nv -67.697845 -71.130341 -18.907063\nv -57.963833 -79.159088 -19.339933\nv -47.897850 -72.689888 -49.213577\nv -54.812973 -73.117111 -40.613125\nv -45.904011 -79.556465 -39.542263\nv -81.142578 40.691101 -41.953739\nv -84.930992 36.194866 -38.427322\nv -81.973793 34.652340 -45.601662\nv -92.890259 26.872841 -25.480375\nv -89.001595 31.662365 -32.805641\nv -90.529663 23.304647 -35.514393\nv -86.958664 20.157980 -45.076004\nv -82.444000 27.203175 -49.628349\nv -82.227798 18.136181 -53.941334\nv -86.328522 28.884247 -41.389442\nv -99.120972 0.773037 13.207411\nv -99.631393 8.225691 2.433479\nv -99.911942 -4.024952 1.184324\nv -98.993378 -8.357796 -11.421816\nv -97.563232 -0.137661 -21.940786\nv -96.083351 -12.828091 -24.564827\nv -99.473709 3.960491 -9.449644\nv -97.488510 10.980175 -19.375868\nv -96.148865 21.519779 -17.096645\nv -98.537735 15.123816 -7.847527\nv -77.540848 -24.286304 -58.288872\nv -74.669899 -15.040863 -64.793365\nv -81.913925 -12.260494 -56.033806\nv -78.492012 -3.237686 -61.875031\nv -84.975754 -21.307598 -48.219379\nv -80.978165 7.900055 -58.138840\nv -86.590286 10.242718 -48.961315\nv -84.959053 -0.600422 -52.740871\nv -90.548729 2.896275 -42.338379\nv -93.859253 -4.605080 -34.194069\nv -91.247215 -17.338596 -37.058311\nv -88.491913 -8.624680 -45.768951\nv -94.329750 17.687620 -28.089981\nv -94.778183 7.041012 -31.104979\nv -91.039726 13.780575 -39.011070\nv -57.105671 -40.286877 71.525589\nv -62.461163 -39.277370 67.497330\nv -58.128002 -45.880562 67.201996\nv -58.970772 -52.502167 61.367516\nv -65.789070 -51.440510 55.006107\nv -59.286304 -59.553307 54.208275\nv -64.496239 -44.824604 61.895000\nv -71.167625 -42.161346 56.192436\nv -75.460075 -32.097939 57.231968\nv -68.796837 -36.429497 62.768520\nv -55.703144 -79.176544 25.064623\nv -61.847672 -77.043777 15.463592\nv -64.469025 -71.493240 27.064014\nv -70.817596 -68.361252 17.652391\nv -57.832798 -73.165588 36.085503\nv -79.350876 -57.674656 19.418348\nv -80.026329 -51.218456 31.184223\nv -86.385666 -45.617401 21.367485\nv -72.605949 -62.221989 29.271160\nv -73.270386 -55.436043 39.475243\nv -66.111984 -58.436863 47.056763\nv -58.980579 -66.411232 45.943851\nv -65.880280 -65.105400 37.697124\nv -96.873581 -6.885723 23.834768\nv -93.002457 -14.331835 33.839931\nv -95.273636 -19.688072 23.136852\nv -81.828178 -27.062449 50.712650\nv -87.817123 -20.966125 42.995037\nv -84.509361 -32.930592 42.115845\nv -86.065247 -39.202347 32.495358\nv -91.801331 -32.678093 22.464560\nv -90.401695 -26.585518 33.477509\nv -72.530724 -48.690712 48.667316\nv -79.524780 -44.534866 41.139435\nv -77.923576 -37.927094 49.894390\nv -79.594421 -33.689392 -50.296638\nv -92.622131 -26.443859 -26.867504\nv -86.768486 -30.570850 -39.200157\nv -87.022934 -39.983143 -28.781214\nv -79.639175 -52.602978 -29.841715\nv -80.305138 -43.302216 -40.939018\nv -98.527054 -11.784498 12.391369\nv -91.637787 -38.766670 9.983084\nv -96.128540 -25.083704 11.406643\nv -95.217285 -30.509968 -1.676691\nv -96.643219 -21.889294 -13.451643\nv -98.550583 -16.962923 -0.202595\nv -67.880188 -73.258453 5.047640\nv -77.050293 -61.098335 -18.172699\nv -73.138733 -67.907578 -6.267849\nv -81.966187 -57.080753 -4.830336\nv -85.187263 -51.700294 8.379116\nv -76.936607 -63.508255 6.889211\nv -92.102325 -35.805553 -15.333763\nv -89.583778 -44.306427 -3.418577\nv -85.466026 -49.072662 -16.953825\nv 79.846405 -47.198200 37.374859\nv 75.552872 -51.332745 40.702728\nv 78.075447 -52.834145 33.358315\nv 75.375618 -59.418716 28.070137\nv 68.915939 -65.138168 31.742916\nv 71.649902 -66.284340 21.741150\nv 72.597618 -57.960548 37.015686\nv 66.113113 -62.324188 41.770214\nv 62.885319 -58.277161 51.470467\nv 69.884758 -55.081173 45.630947\nv 52.961250 -84.804504 -1.817396\nv 43.122730 -90.217896 1.077862\nv 44.379303 -88.988342 -10.561895\nv 51.431549 -85.186340 9.903769\nv 41.358978 -90.020737 13.627245\nv 60.570293 -79.280685 6.768450\nv 38.417679 -88.293495 26.987791\nv 46.575886 -81.264290 35.025726\nv 35.141273 -84.562073 40.178932\nv 49.474613 -84.013557 22.225784\nv 56.071129 -77.177109 29.995354\nv 64.441368 -72.188133 25.222691\nv 66.847595 -72.893311 14.763639\nv 58.557053 -79.017593 18.091145\nv 21.518631 -65.173805 72.727730\nv 33.790798 -64.821159 68.237816\nv 26.053795 -72.887611 63.313469\nv 54.700413 -61.068897 57.257790\nv 45.001106 -63.212402 63.080044\nv 49.101471 -69.171463 52.956139\nv 42.760696 -77.039413 47.291130\nv 30.763802 -79.319321 52.555046\nv 38.462364 -71.330788 58.588097\nv 61.801945 -69.669281 36.424046\nv 53.022125 -73.756180 41.817215\nv 58.435505 -65.862640 47.406788\nv -14.422650 -83.546097 -53.028648\nv -16.051807 -86.696533 -47.181053\nv -8.663467 -86.212387 -49.923615\nv -23.874968 -91.695641 -31.967079\nv -19.391045 -89.512833 -40.142735\nv -13.342423 -92.892265 -34.539928\nv -3.017616 -92.748032 -37.265244\nv -1.714370 -88.852051 -45.851662\nv 6.537161 -91.148224 -40.611160\nv -10.320921 -89.880890 -42.601696\nv -42.521099 -89.810692 11.224764\nv -38.144447 -92.435257 -0.851530\nv -30.783228 -94.740738 8.751310\nv -18.285168 -98.160629 5.490192\nv -13.893217 -98.769356 -7.182810\nv -4.654850 -99.872414 1.958212\nv -26.494366 -96.353821 -3.740460\nv -21.757206 -96.427513 -15.111510\nv -28.686296 -93.051552 -22.770702\nv -33.349358 -93.473190 -12.271207\nv 33.857849 -93.783165 -7.639648\nv 35.011658 -91.711143 -19.059124\nv 24.334677 -95.616722 -16.286993\nv 25.260633 -92.859268 -27.185596\nv 21.984623 -97.458069 -4.312984\nv 15.645185 -92.594322 -34.373238\nv 5.392820 -94.892975 -31.084461\nv 14.613213 -95.939323 -24.126797\nv 2.795105 -97.699814 -21.140804\nv -0.710205 -99.468559 -10.271404\nv 9.102207 -99.576691 -1.278414\nv 12.235073 -98.333725 -13.445559\nv -17.433056 -95.077942 -25.617874\nv -9.583456 -97.841026 -18.310986\nv -5.726345 -95.701569 -28.432720\nv -52.196411 -44.923077 72.508286\nv -37.212540 -53.121559 76.113914\nv -45.542934 -49.092758 74.268036\nv -44.718227 -56.619919 69.242073\nv -52.223164 -59.003502 61.573742\nv -52.100018 -51.732147 67.892349\nv 8.691296 -64.554710 75.875885\nv -4.215252 -62.794632 77.711426\nv -0.455959 -71.171104 70.245750\nv -10.224438 -77.180527 62.758476\nv -22.868200 -73.820747 63.462921\nv -19.991749 -81.958481 53.694859\nv -13.377861 -68.734619 71.390373\nv -25.220785 -65.346107 71.370842\nv -27.315109 -56.769192 77.660431\nv -16.359776 -60.185055 78.167236\nv -46.117718 -85.613747 23.311865\nv -48.817505 -80.033821 34.805733\nv -38.296963 -86.053589 33.587536\nv -51.792103 -66.252518 54.112671\nv -50.856644 -73.348755 45.095013\nv -42.789421 -72.110733 54.489521\nv -32.407513 -77.254387 54.603241\nv -29.798025 -84.739906 43.945709\nv -41.230042 -79.353317 44.756382\nv -35.789505 -61.048466 70.655472\nv -34.296978 -69.266174 63.450089\nv -44.163158 -64.287071 62.584244\nv 31.878580 -94.666985 4.681568\nv 5.453434 -99.132866 11.955570\nv 19.207142 -97.774788 8.436661\nv 15.899628 -96.245804 21.998846\nv 25.760342 -91.294312 31.650475\nv 29.365780 -93.908394 17.856804\nv -35.058666 -91.203659 21.278721\nv -16.712643 -89.077522 42.259720\nv -26.494381 -91.039879 31.777176\nv -13.045952 -94.756027 29.173613\nv -8.791603 -98.380852 15.617804\nv -22.425236 -95.626938 18.777605\nv 12.998886 -72.753601 67.364250\nv 21.895348 -86.583038 44.988571\nv 17.392105 -80.325050 56.968414\nv 7.705280 -86.772629 49.103371\nv -6.554443 -85.204262 51.935280\nv 3.546467 -79.494781 60.564037\nv 1.490078 -96.537407 26.044365\nv -2.587841 -91.820259 39.526466\nv 11.893501 -92.545723 35.969921\nv -77.671951 40.925697 -47.876446\nv -77.355049 26.482826 -57.574791\nv -77.656715 34.443146 -52.755119\nv -71.947250 35.445522 -59.726105\nv -66.106491 44.387955 -60.494961\nv -72.566383 42.438381 -54.158142\nv -66.439896 -17.041126 -72.769089\nv -71.077499 -5.059296 -70.159760\nv -62.271114 -6.324398 -77.989159\nv -56.530975 5.334579 -82.315186\nv -60.517902 17.298365 -77.706818\nv -49.702881 17.474718 -84.995636\nv -66.339737 5.767845 -74.604095\nv -69.127281 16.962822 -70.240158\nv -76.442001 16.850801 -62.230785\nv -74.314041 6.405605 -66.606239\nv -24.983177 49.212170 -83.390663\nv -37.250412 48.882229 -78.885574\nv -33.302658 39.491089 -85.623512\nv -57.876045 46.412247 -67.054184\nv -48.287346 48.072235 -73.194199\nv -55.827057 38.187717 -73.654861\nv -53.284767 28.601284 -79.641068\nv -41.674286 29.053204 -86.134575\nv -45.393372 39.398647 -79.919884\nv -71.044174 26.977566 -64.999512\nv -62.997147 27.810223 -72.511726\nv -64.680473 37.066376 -66.652237\nv -15.401941 -80.304131 -57.567577\nv -19.124901 -76.403648 -61.617542\nv -11.318434 -77.212189 -62.531368\nv -6.156913 -72.839836 -68.238190\nv -10.605494 -66.695992 -73.750717\nv -0.193011 -67.208847 -74.046837\nv -15.581409 -72.097534 -67.521599\nv -21.209404 -66.292824 -71.801277\nv -31.682709 -65.545677 -68.556328\nv -24.780514 -71.519051 -65.352516\nv 20.387306 -42.293633 -88.292740\nv 15.954634 -32.733505 -93.134148\nv 27.443737 -31.726650 -90.775894\nv 8.687189 -43.140060 -89.796822\nv 3.022978 -33.245438 -94.263474\nv 13.161332 -52.020607 -84.383865\nv -10.374070 -33.603630 -93.611839\nv -17.249813 -43.505783 -88.372452\nv -24.309204 -33.014671 -91.209068\nv -4.112535 -43.520767 -89.939026\nv -10.583371 -52.570267 -84.405922\nv -4.597638 -60.275784 -79.659851\nv 6.154507 -60.424347 -79.441933\nv 1.691290 -52.384464 -85.164589\nv -60.503483 -28.844830 -74.211212\nv -53.599266 -39.927948 -74.383316\nv -49.746960 -30.546453 -81.192085\nv -38.813068 -58.453117 -71.251511\nv -46.350945 -49.964317 -73.178940\nv -35.107914 -51.279018 -78.344719\nv -30.252892 -43.131432 -84.996719\nv -37.721806 -32.278919 -86.805168\nv -42.657784 -41.835590 -80.187881\nv -16.279816 -60.240875 -78.140923\nv -23.034962 -52.357048 -82.025177\nv -28.015549 -59.589001 -75.261406\nv 55.818745 33.619564 -75.855064\nv 50.024879 34.351181 -79.482750\nv 54.243755 27.634308 -79.334480\nv 34.000275 39.360039 -85.409409\nv 42.695190 36.455925 -82.753166\nv 38.884090 29.741249 -87.197960\nv 43.706150 20.232418 -87.638016\nv 51.998707 20.300808 -82.969948\nv 48.854126 11.436899 -86.501274\nv 47.082848 28.142927 -83.613281\nv -12.173878 48.509964 -86.594345\nv 0.786404 46.997459 -88.264496\nv -6.620396 38.569359 -92.024857\nv -0.669079 26.992577 -96.285782\nv 12.650736 25.349220 -95.902954\nv 5.808136 14.617676 -98.755196\nv 6.416733 36.663715 -92.814865\nv 18.496332 34.366348 -92.069748\nv 24.188654 42.311211 -87.319351\nv 13.016006 44.764626 -88.468704\nv 22.747761 -21.533361 -94.967644\nv 33.965599 -20.598167 -91.771751\nv 29.343616 -10.355018 -95.035393\nv 39.910114 -9.336831 -91.214073\nv 17.824396 -10.446755 -97.842506\nv 44.842468 1.454190 -89.370216\nv 39.666111 11.011059 -91.133720\nv 34.941422 0.732753 -93.693970\nv 29.681681 11.819902 -94.759102\nv 18.508829 13.222191 -97.378624\nv 11.820211 1.905154 -99.280678\nv 24.248974 1.134403 -97.008774\nv 29.522678 32.144848 -89.972878\nv 24.314831 23.312679 -94.155762\nv 34.799179 21.383194 -91.278557\nv -56.475712 -18.666784 -80.386856\nv -31.604446 -21.348501 -92.441338\nv -44.764969 -20.048206 -87.144516\nv -38.601997 -8.347187 -91.870621\nv -44.538422 4.827332 -89.403717\nv -51.273373 -7.385071 -85.536560\nv 10.551798 -22.125490 -96.949074\nv -2.026451 2.729052 -99.942207\nv 4.543886 -10.164715 -99.378220\nv -9.656418 -9.836962 -99.045387\nv -17.293856 -22.045795 -95.994293\nv -3.121645 -22.156902 -97.464493\nv -20.245880 39.365707 -89.668533\nv -36.946194 17.241684 -91.311028\nv -28.581598 28.773487 -91.406662\nv -22.907513 16.733824 -95.891739\nv -8.541222 15.653946 -98.397156\nv -14.669971 28.247250 -94.799179\nv -24.394302 -9.032314 -96.557419\nv -16.589539 3.457500 -98.553711\nv -31.058947 4.239861 -94.959808\nv -8.822539 -81.962410 -56.606773\nv 6.546258 -86.464203 -49.810520\nv -1.555781 -84.256989 -53.836216\nv 5.239993 -80.751396 -58.751640\nv 3.086932 -74.018440 -67.169487\nv -3.072688 -78.782959 -61.512634\nv 44.975731 -86.536179 -22.105965\nv 35.112450 -88.522133 -30.511433\nv 44.757713 -82.658440 -34.122276\nv 43.841820 -76.902908 -46.517059\nv 32.623821 -77.689377 -53.852085\nv 41.725616 -69.569603 -58.472595\nv 34.408020 -83.863419 -42.225765\nv 24.172087 -83.691734 -49.106033\nv 15.589785 -88.279366 -44.313805\nv 25.227785 -88.976105 -38.036987\nv 31.617134 -41.372784 -85.373589\nv 24.321400 -51.704063 -82.068024\nv 35.845348 -51.226547 -78.044563\nv 9.713007 -68.091774 -72.589027\nv 16.739735 -60.588875 -77.773834\nv 19.907394 -69.209190 -69.381439\nv 30.492315 -69.868355 -64.719643\nv 39.077595 -60.725006 -69.176704\nv 27.536224 -61.008038 -74.295197\nv 14.148331 -82.600357 -54.561958\nv 22.193438 -77.075546 -59.722794\nv 12.158171 -75.685303 -64.217720\nv 82.745712 -46.651978 31.252811\nv 89.818756 -40.793503 16.385391\nv 86.247147 -44.360336 24.363651\nv 84.695526 -50.183315 17.558502\nv 78.395096 -59.041622 19.191036\nv 81.259132 -52.387753 25.543652\nv 95.651398 -16.689749 -23.922029\nv 96.207031 -23.993809 -12.980949\nv 92.666855 -29.343798 -23.490316\nv 88.099861 -41.830151 -22.105488\nv 86.996887 -48.141045 -10.676239\nv 81.521744 -54.259270 -20.251873\nv 92.513382 -36.026459 -11.973625\nv 90.761383 -41.959820 -1.320492\nv 93.010612 -35.969780 7.429613\nv 95.191704 -30.537035 -2.455311\nv 54.242496 -82.954620 -13.277170\nv 62.439503 -77.986389 -4.408169\nv 64.074905 -75.056450 -16.153513\nv 74.488518 -65.609299 12.119398\nv 69.111176 -72.145859 4.315041\nv 77.467461 -63.201851 2.078335\nv 79.958611 -59.437881 -8.588238\nv 73.253700 -65.560944 -18.320942\nv 71.514580 -69.596367 -6.481468\nv 88.048264 -46.588879 8.773792\nv 84.796623 -53.003460 0.408806\nv 81.695389 -56.728996 10.377054\nv 60.370922 28.679218 -74.383148\nv 57.403999 12.800244 -80.876045\nv 59.415478 21.273956 -77.570717\nv 65.333488 15.282677 -74.148323\nv 72.259048 18.447590 -66.620697\nv 66.129288 23.700531 -71.170235\nv 38.648415 -30.232510 -87.133774\nv 44.865959 -18.708025 -87.390244\nv 49.905464 -27.983883 -82.014305\nv 61.274521 -25.183914 -74.907959\nv 66.104080 -12.692739 -73.953667\nv 71.824059 -21.469952 -66.184181\nv 55.705276 -16.138025 -81.464630\nv 60.215473 -4.796051 -79.693756\nv 54.130428 3.069838 -84.026611\nv 50.126984 -7.512168 -86.202385\nv 93.386856 -9.166679 -34.566830\nv 89.539566 -1.620913 -44.497627\nv 88.031372 -13.671652 -45.426460\nv 78.651443 12.399628 -60.499557\nv 84.530884 5.825960 -53.109200\nv 77.784142 1.944414 -62.815971\nv 75.542450 -9.238747 -64.868965\nv 80.872421 -17.672983 -56.100960\nv 83.470680 -5.346620 -54.809296\nv 63.305260 5.954434 -77.181534\nv 69.552261 -1.412623 -71.836533\nv 71.679535 9.123353 -69.128922\nv 55.015446 -79.564148 -25.354473\nv 73.873810 -59.932270 -30.834772\nv 64.808609 -70.653870 -28.423140\nv 64.320564 -64.609848 -41.090561\nv 53.523476 -67.703697 -50.511856\nv 54.774551 -74.610603 -37.855083\nv 91.290993 -21.543238 -34.667606\nv 76.525589 -30.857494 -56.494682\nv 84.987038 -26.246223 -45.698349\nv 80.015045 -39.528831 -45.111679\nv 81.570366 -47.553425 -32.938522\nv 87.362640 -34.581173 -34.233215\nv 43.277950 -40.070633 -80.754951\nv 50.899281 -59.383041 -62.313068\nv 47.564003 -49.920334 -72.426689\nv 59.263817 -47.512230 -65.041435\nv 66.402344 -34.801239 -66.178558\nv 54.961670 -37.824368 -74.488472\nv 72.905197 -52.638264 -43.749798\nv 70.387123 -44.129143 -55.662125\nv 62.516426 -56.659317 -53.678841\nf 1 2 3\nf 4 5 2\nf 6 3 5\nf 2 5 3\nf 7 8 9\nf 10 11 8\nf 4 9 11\nf 8 11 9\nf 12 13 14\nf 6 15 13\nf 10 14 15\nf 13 15 14\nf 4 11 5\nf 10 15 11\nf 6 5 15\nf 11 15 5\nf 16 17 18\nf 19 20 17\nf 21 18 20\nf 17 20 18\nf 22 23 24\nf 25 26 23\nf 19 24 26\nf 23 26 24\nf 7 27 28\nf 21 29 27\nf 25 28 29\nf 27 29 28\nf 19 26 20\nf 25 29 26\nf 21 20 29\nf 26 29 20\nf 30 31 32\nf 33 34 31\nf 35 32 34\nf 31 34 32\nf 12 36 37\nf 38 39 36\nf 33 37 39\nf 36 39 37\nf 22 40 41\nf 35 42 40\nf 38 41 42\nf 40 42 41\nf 33 39 34\nf 38 42 39\nf 35 34 42\nf 39 42 34\nf 7 28 8\nf 25 43 28\nf 10 8 43\nf 28 43 8\nf 22 41 23\nf 38 44 41\nf 25 23 44\nf 41 44 23\nf 12 14 36\nf 10 45 14\nf 38 36 45\nf 14 45 36\nf 25 44 43\nf 38 45 44\nf 10 43 45\nf 44 45 43\nf 46 47 48\nf 49 50 47\nf 51 48 50\nf 47 50 48\nf 52 53 54\nf 55 56 53\nf 49 54 56\nf 53 56 54\nf 57 58 59\nf 51 60 58\nf 55 59 60\nf 58 60 59\nf 49 56 50\nf 55 60 56\nf 51 50 60\nf 56 60 50\nf 61 62 63\nf 64 65 62\nf 66 63 65\nf 62 65 63\nf 67 68 69\nf 70 71 68\nf 64 69 71\nf 68 71 69\nf 52 72 73\nf 66 74 72\nf 70 73 74\nf 72 74 73\nf 64 71 65\nf 70 74 71\nf 66 65 74\nf 71 74 65\nf 16 75 76\nf 77 78 75\nf 79 76 78\nf 75 78 76\nf 57 80 81\nf 82 83 80\nf 77 81 83\nf 80 83 81\nf 67 84 85\nf 79 86 84\nf 82 85 86\nf 84 86 85\nf 77 83 78\nf 82 86 83\nf 79 78 86\nf 83 86 78\nf 52 73 53\nf 70 87 73\nf 55 53 87\nf 73 87 53\nf 67 85 68\nf 82 88 85\nf 70 68 88\nf 85 88 68\nf 57 59 80\nf 55 89 59\nf 82 80 89\nf 59 89 80\nf 70 88 87\nf 82 89 88\nf 55 87 89\nf 88 89 87\nf 90 91 92\nf 93 94 91\nf 95 92 94\nf 91 94 92\nf 96 97 98\nf 99 100 97\nf 93 98 100\nf 97 100 98\nf 101 102 103\nf 95 104 102\nf 99 103 104\nf 102 104 103\nf 93 100 94\nf 99 104 100\nf 95 94 104\nf 100 104 94\nf 30 105 106\nf 107 108 105\nf 109 106 108\nf 105 108 106\nf 110 111 112\nf 113 114 111\nf 107 112 114\nf 111 114 112\nf 96 115 116\nf 109 117 115\nf 113 116 117\nf 115 117 116\nf 107 114 108\nf 113 117 114\nf 109 108 117\nf 114 117 108\nf 61 118 119\nf 120 121 118\nf 122 119 121\nf 118 121 119\nf 101 123 124\nf 125 126 123\nf 120 124 126\nf 123 126 124\nf 110 127 128\nf 122 129 127\nf 125 128 129\nf 127 129 128\nf 120 126 121\nf 125 129 126\nf 122 121 129\nf 126 129 121\nf 96 116 97\nf 113 130 116\nf 99 97 130\nf 116 130 97\nf 110 128 111\nf 125 131 128\nf 113 111 131\nf 128 131 111\nf 101 103 123\nf 99 132 103\nf 125 123 132\nf 103 132 123\nf 113 131 130\nf 125 132 131\nf 99 130 132\nf 131 132 130\nf 16 76 17\nf 79 133 76\nf 19 17 133\nf 76 133 17\nf 67 134 84\nf 135 136 134\nf 79 84 136\nf 134 136 84\nf 22 24 137\nf 19 138 24\nf 135 137 138\nf 24 138 137\nf 79 136 133\nf 135 138 136\nf 19 133 138\nf 136 138 133\nf 61 119 62\nf 122 139 119\nf 64 62 139\nf 119 139 62\nf 110 140 127\nf 141 142 140\nf 122 127 142\nf 140 142 127\nf 67 69 143\nf 64 144 69\nf 141 143 144\nf 69 144 143\nf 122 142 139\nf 141 144 142\nf 64 139 144\nf 142 144 139\nf 30 32 105\nf 35 145 32\nf 107 105 145\nf 32 145 105\nf 22 146 40\nf 147 148 146\nf 35 40 148\nf 146 148 40\nf 110 112 149\nf 107 150 112\nf 147 149 150\nf 112 150 149\nf 35 148 145\nf 147 150 148\nf 107 145 150\nf 148 150 145\nf 67 143 134\nf 141 151 143\nf 135 134 151\nf 143 151 134\nf 110 149 140\nf 147 152 149\nf 141 140 152\nf 149 152 140\nf 22 137 146\nf 135 153 137\nf 147 146 153\nf 137 153 146\nf 141 152 151\nf 147 153 152\nf 135 151 153\nf 152 153 151\nf 154 155 156\nf 157 158 155\nf 159 156 158\nf 155 158 156\nf 160 161 162\nf 163 164 161\nf 157 162 164\nf 161 164 162\nf 165 166 167\nf 159 168 166\nf 163 167 168\nf 166 168 167\nf 157 164 158\nf 163 168 164\nf 159 158 168\nf 164 168 158\nf 169 170 171\nf 172 173 170\nf 174 171 173\nf 170 173 171\nf 175 176 177\nf 178 179 176\nf 172 177 179\nf 176 179 177\nf 160 180 181\nf 174 182 180\nf 178 181 182\nf 180 182 181\nf 172 179 173\nf 178 182 179\nf 174 173 182\nf 179 182 173\nf 183 184 185\nf 186 187 184\nf 188 185 187\nf 184 187 185\nf 165 189 190\nf 191 192 189\nf 186 190 192\nf 189 192 190\nf 175 193 194\nf 188 195 193\nf 191 194 195\nf 193 195 194\nf 186 192 187\nf 191 195 192\nf 188 187 195\nf 192 195 187\nf 160 181 161\nf 178 196 181\nf 163 161 196\nf 181 196 161\nf 175 194 176\nf 191 197 194\nf 178 176 197\nf 194 197 176\nf 165 167 189\nf 163 198 167\nf 191 189 198\nf 167 198 189\nf 178 197 196\nf 191 198 197\nf 163 196 198\nf 197 198 196\nf 1 3 199\nf 6 200 3\nf 201 199 200\nf 3 200 199\nf 12 202 13\nf 203 204 202\nf 6 13 204\nf 202 204 13\nf 205 206 207\nf 201 208 206\nf 203 207 208\nf 206 208 207\nf 6 204 200\nf 203 208 204\nf 201 200 208\nf 204 208 200\nf 30 209 31\nf 210 211 209\nf 33 31 211\nf 209 211 31\nf 212 213 214\nf 215 216 213\nf 210 214 216\nf 213 216 214\nf 12 37 217\nf 33 218 37\nf 215 217 218\nf 37 218 217\nf 210 216 211\nf 215 218 216\nf 33 211 218\nf 216 218 211\nf 169 219 220\nf 221 222 219\nf 223 220 222\nf 219 222 220\nf 205 224 225\nf 226 227 224\nf 221 225 227\nf 224 227 225\nf 212 228 229\nf 223 230 228\nf 226 229 230\nf 228 230 229\nf 221 227 222\nf 226 230 227\nf 223 222 230\nf 227 230 222\nf 12 217 202\nf 215 231 217\nf 203 202 231\nf 217 231 202\nf 212 229 213\nf 226 232 229\nf 215 213 232\nf 229 232 213\nf 205 207 224\nf 203 233 207\nf 226 224 233\nf 207 233 224\nf 215 232 231\nf 226 233 232\nf 203 231 233\nf 232 233 231\nf 90 234 91\nf 235 236 234\nf 93 91 236\nf 234 236 91\nf 237 238 239\nf 240 241 238\nf 235 239 241\nf 238 241 239\nf 96 98 242\nf 93 243 98\nf 240 242 243\nf 98 243 242\nf 235 241 236\nf 240 243 241\nf 93 236 243\nf 241 243 236\nf 183 244 245\nf 246 247 244\nf 248 245 247\nf 244 247 245\nf 249 250 251\nf 252 253 250\nf 246 251 253\nf 250 253 251\nf 237 254 255\nf 248 256 254\nf 252 255 256\nf 254 256 255\nf 246 253 247\nf 252 256 253\nf 248 247 256\nf 253 256 247\nf 30 106 257\nf 109 258 106\nf 259 257 258\nf 106 258 257\nf 96 260 115\nf 261 262 260\nf 109 115 262\nf 260 262 115\nf 249 263 264\nf 259 265 263\nf 261 264 265\nf 263 265 264\nf 109 262 258\nf 261 265 262\nf 259 258 265\nf 262 265 258\nf 237 255 238\nf 252 266 255\nf 240 238 266\nf 255 266 238\nf 249 264 250\nf 261 267 264\nf 252 250 267\nf 264 267 250\nf 96 242 260\nf 240 268 242\nf 261 260 268\nf 242 268 260\nf 252 267 266\nf 261 268 267\nf 240 266 268\nf 267 268 266\nf 169 220 170\nf 223 269 220\nf 172 170 269\nf 220 269 170\nf 212 270 228\nf 271 272 270\nf 223 228 272\nf 270 272 228\nf 175 177 273\nf 172 274 177\nf 271 273 274\nf 177 274 273\nf 223 272 269\nf 271 274 272\nf 172 269 274\nf 272 274 269\nf 30 257 209\nf 259 275 257\nf 210 209 275\nf 257 275 209\nf 249 276 263\nf 277 278 276\nf 259 263 278\nf 276 278 263\nf 212 214 279\nf 210 280 214\nf 277 279 280\nf 214 280 279\nf 259 278 275\nf 277 280 278\nf 210 275 280\nf 278 280 275\nf 183 185 244\nf 188 281 185\nf 246 244 281\nf 185 281 244\nf 175 282 193\nf 283 284 282\nf 188 193 284\nf 282 284 193\nf 249 251 285\nf 246 286 251\nf 283 285 286\nf 251 286 285\nf 188 284 281\nf 283 286 284\nf 246 281 286\nf 284 286 281\nf 212 279 270\nf 277 287 279\nf 271 270 287\nf 279 287 270\nf 249 285 276\nf 283 288 285\nf 277 276 288\nf 285 288 276\nf 175 273 282\nf 271 289 273\nf 283 282 289\nf 273 289 282\nf 277 288 287\nf 283 289 288\nf 271 287 289\nf 288 289 287\nf 46 48 290\nf 51 291 48\nf 292 290 291\nf 48 291 290\nf 57 293 58\nf 294 295 293\nf 51 58 295\nf 293 295 58\nf 296 297 298\nf 292 299 297\nf 294 298 299\nf 297 299 298\nf 51 295 291\nf 294 299 295\nf 292 291 299\nf 295 299 291\nf 16 300 75\nf 301 302 300\nf 77 75 302\nf 300 302 75\nf 303 304 305\nf 306 307 304\nf 301 305 307\nf 304 307 305\nf 57 81 308\nf 77 309 81\nf 306 308 309\nf 81 309 308\nf 301 307 302\nf 306 309 307\nf 77 302 309\nf 307 309 302\nf 310 311 312\nf 313 314 311\nf 315 312 314\nf 311 314 312\nf 296 316 317\nf 318 319 316\nf 313 317 319\nf 316 319 317\nf 303 320 321\nf 315 322 320\nf 318 321 322\nf 320 322 321\nf 313 319 314\nf 318 322 319\nf 315 314 322\nf 319 322 314\nf 57 308 293\nf 306 323 308\nf 294 293 323\nf 308 323 293\nf 303 321 304\nf 318 324 321\nf 306 304 324\nf 321 324 304\nf 296 298 316\nf 294 325 298\nf 318 316 325\nf 298 325 316\nf 306 324 323\nf 318 325 324\nf 294 323 325\nf 324 325 323\nf 1 326 2\nf 327 328 326\nf 4 2 328\nf 326 328 2\nf 329 330 331\nf 332 333 330\nf 327 331 333\nf 330 333 331\nf 7 9 334\nf 4 335 9\nf 332 334 335\nf 9 335 334\nf 327 333 328\nf 332 335 333\nf 4 328 335\nf 333 335 328\nf 336 337 338\nf 339 340 337\nf 341 338 340\nf 337 340 338\nf 342 343 344\nf 345 346 343\nf 339 344 346\nf 343 346 344\nf 329 347 348\nf 341 349 347\nf 345 348 349\nf 347 349 348\nf 339 346 340\nf 345 349 346\nf 341 340 349\nf 346 349 340\nf 16 18 350\nf 21 351 18\nf 352 350 351\nf 18 351 350\nf 7 353 27\nf 354 355 353\nf 21 27 355\nf 353 355 27\nf 342 356 357\nf 352 358 356\nf 354 357 358\nf 356 358 357\nf 21 355 351\nf 354 358 355\nf 352 351 358\nf 355 358 351\nf 329 348 330\nf 345 359 348\nf 332 330 359\nf 348 359 330\nf 342 357 343\nf 354 360 357\nf 345 343 360\nf 357 360 343\nf 7 334 353\nf 332 361 334\nf 354 353 361\nf 334 361 353\nf 345 360 359\nf 354 361 360\nf 332 359 361\nf 360 361 359\nf 362 363 364\nf 365 366 363\nf 367 364 366\nf 363 366 364\nf 368 369 370\nf 371 372 369\nf 365 370 372\nf 369 372 370\nf 373 374 375\nf 367 376 374\nf 371 375 376\nf 374 376 375\nf 365 372 366\nf 371 376 372\nf 367 366 376\nf 372 376 366\nf 310 377 378\nf 379 380 377\nf 381 378 380\nf 377 380 378\nf 382 383 384\nf 385 386 383\nf 379 384 386\nf 383 386 384\nf 368 387 388\nf 381 389 387\nf 385 388 389\nf 387 389 388\nf 379 386 380\nf 385 389 386\nf 381 380 389\nf 386 389 380\nf 336 390 391\nf 392 393 390\nf 394 391 393\nf 390 393 391\nf 373 395 396\nf 397 398 395\nf 392 396 398\nf 395 398 396\nf 382 399 400\nf 394 401 399\nf 397 400 401\nf 399 401 400\nf 392 398 393\nf 397 401 398\nf 394 393 401\nf 398 401 393\nf 368 388 369\nf 385 402 388\nf 371 369 402\nf 388 402 369\nf 382 400 383\nf 397 403 400\nf 385 383 403\nf 400 403 383\nf 373 375 395\nf 371 404 375\nf 397 395 404\nf 375 404 395\nf 385 403 402\nf 397 404 403\nf 371 402 404\nf 403 404 402\nf 16 350 300\nf 352 405 350\nf 301 300 405\nf 350 405 300\nf 342 406 356\nf 407 408 406\nf 352 356 408\nf 406 408 356\nf 303 305 409\nf 301 410 305\nf 407 409 410\nf 305 410 409\nf 352 408 405\nf 407 410 408\nf 301 405 410\nf 408 410 405\nf 336 391 337\nf 394 411 391\nf 339 337 411\nf 391 411 337\nf 382 412 399\nf 413 414 412\nf 394 399 414\nf 412 414 399\nf 342 344 415\nf 339 416 344\nf 413 415 416\nf 344 416 415\nf 394 414 411\nf 413 416 414\nf 339 411 416\nf 414 416 411\nf 310 312 377\nf 315 417 312\nf 379 377 417\nf 312 417 377\nf 303 418 320\nf 419 420 418\nf 315 320 420\nf 418 420 320\nf 382 384 421\nf 379 422 384\nf 419 421 422\nf 384 422 421\nf 315 420 417\nf 419 422 420\nf 379 417 422\nf 420 422 417\nf 342 415 406\nf 413 423 415\nf 407 406 423\nf 415 423 406\nf 382 421 412\nf 419 424 421\nf 413 412 424\nf 421 424 412\nf 303 409 418\nf 407 425 409\nf 419 418 425\nf 409 425 418\nf 413 424 423\nf 419 425 424\nf 407 423 425\nf 424 425 423\nf 1 199 326\nf 201 426 199\nf 327 326 426\nf 199 426 326\nf 205 427 206\nf 428 429 427\nf 201 206 429\nf 427 429 206\nf 329 331 430\nf 327 431 331\nf 428 430 431\nf 331 431 430\nf 201 429 426\nf 428 431 429\nf 327 426 431\nf 429 431 426\nf 169 432 219\nf 433 434 432\nf 221 219 434\nf 432 434 219\nf 435 436 437\nf 438 439 436\nf 433 437 439\nf 436 439 437\nf 205 225 440\nf 221 441 225\nf 438 440 441\nf 225 441 440\nf 433 439 434\nf 438 441 439\nf 221 434 441\nf 439 441 434\nf 336 338 442\nf 341 443 338\nf 444 442 443\nf 338 443 442\nf 329 445 347\nf 446 447 445\nf 341 347 447\nf 445 447 347\nf 435 448 449\nf 444 450 448\nf 446 449 450\nf 448 450 449\nf 341 447 443\nf 446 450 447\nf 444 443 450\nf 447 450 443\nf 205 440 427\nf 438 451 440\nf 428 427 451\nf 440 451 427\nf 435 449 436\nf 446 452 449\nf 438 436 452\nf 449 452 436\nf 329 430 445\nf 428 453 430\nf 446 445 453\nf 430 453 445\nf 438 452 451\nf 446 453 452\nf 428 451 453\nf 452 453 451\nf 154 454 155\nf 455 456 454\nf 157 155 456\nf 454 456 155\nf 457 458 459\nf 460 461 458\nf 455 459 461\nf 458 461 459\nf 160 162 462\nf 157 463 162\nf 460 462 463\nf 162 463 462\nf 455 461 456\nf 460 463 461\nf 157 456 463\nf 461 463 456\nf 464 465 466\nf 467 468 465\nf 469 466 468\nf 465 468 466\nf 470 471 472\nf 473 474 471\nf 467 472 474\nf 471 474 472\nf 457 475 476\nf 469 477 475\nf 473 476 477\nf 475 477 476\nf 467 474 468\nf 473 477 474\nf 469 468 477\nf 474 477 468\nf 169 171 478\nf 174 479 171\nf 480 478 479\nf 171 479 478\nf 160 481 180\nf 482 483 481\nf 174 180 483\nf 481 483 180\nf 470 484 485\nf 480 486 484\nf 482 485 486\nf 484 486 485\nf 174 483 479\nf 482 486 483\nf 480 479 486\nf 483 486 479\nf 457 476 458\nf 473 487 476\nf 460 458 487\nf 476 487 458\nf 470 485 471\nf 482 488 485\nf 473 471 488\nf 485 488 471\nf 160 462 481\nf 460 489 462\nf 482 481 489\nf 462 489 481\nf 473 488 487\nf 482 489 488\nf 460 487 489\nf 488 489 487\nf 362 364 490\nf 367 491 364\nf 492 490 491\nf 364 491 490\nf 373 493 374\nf 494 495 493\nf 367 374 495\nf 493 495 374\nf 496 497 498\nf 492 499 497\nf 494 498 499\nf 497 499 498\nf 367 495 491\nf 494 499 495\nf 492 491 499\nf 495 499 491\nf 336 500 390\nf 501 502 500\nf 392 390 502\nf 500 502 390\nf 503 504 505\nf 506 507 504\nf 501 505 507\nf 504 507 505\nf 373 396 508\nf 392 509 396\nf 506 508 509\nf 396 509 508\nf 501 507 502\nf 506 509 507\nf 392 502 509\nf 507 509 502\nf 464 510 511\nf 512 513 510\nf 514 511 513\nf 510 513 511\nf 496 515 516\nf 517 518 515\nf 512 516 518\nf 515 518 516\nf 503 519 520\nf 514 521 519\nf 517 520 521\nf 519 521 520\nf 512 518 513\nf 517 521 518\nf 514 513 521\nf 518 521 513\nf 373 508 493\nf 506 522 508\nf 494 493 522\nf 508 522 493\nf 503 520 504\nf 517 523 520\nf 506 504 523\nf 520 523 504\nf 496 498 515\nf 494 524 498\nf 517 515 524\nf 498 524 515\nf 506 523 522\nf 517 524 523\nf 494 522 524\nf 523 524 522\nf 169 478 432\nf 480 525 478\nf 433 432 525\nf 478 525 432\nf 470 526 484\nf 527 528 526\nf 480 484 528\nf 526 528 484\nf 435 437 529\nf 433 530 437\nf 527 529 530\nf 437 530 529\nf 480 528 525\nf 527 530 528\nf 433 525 530\nf 528 530 525\nf 464 511 465\nf 514 531 511\nf 467 465 531\nf 511 531 465\nf 503 532 519\nf 533 534 532\nf 514 519 534\nf 532 534 519\nf 470 472 535\nf 467 536 472\nf 533 535 536\nf 472 536 535\nf 514 534 531\nf 533 536 534\nf 467 531 536\nf 534 536 531\nf 336 442 500\nf 444 537 442\nf 501 500 537\nf 442 537 500\nf 435 538 448\nf 539 540 538\nf 444 448 540\nf 538 540 448\nf 503 505 541\nf 501 542 505\nf 539 541 542\nf 505 542 541\nf 444 540 537\nf 539 542 540\nf 501 537 542\nf 540 542 537\nf 470 535 526\nf 533 543 535\nf 527 526 543\nf 535 543 526\nf 503 541 532\nf 539 544 541\nf 533 532 544\nf 541 544 532\nf 435 529 538\nf 527 545 529\nf 539 538 545\nf 529 545 538\nf 533 544 543\nf 539 545 544\nf 527 543 545\nf 544 545 543\nf 546 547 548\nf 547 549 550\nf 549 546 551\nf 546 549 547\nf 552 553 554\nf 553 555 556\nf 555 552 550\nf 552 555 553\nf 557 558 559\nf 558 560 551\nf 560 557 556\nf 557 560 558\nf 549 555 550\nf 555 560 556\nf 560 549 551\nf 549 560 555\nf 561 562 563\nf 562 564 565\nf 564 561 566\nf 561 564 562\nf 567 568 569\nf 568 570 571\nf 570 567 565\nf 567 570 568\nf 572 573 554\nf 573 574 566\nf 574 572 571\nf 572 574 573\nf 564 570 565\nf 570 574 571\nf 574 564 566\nf 564 574 570\nf 575 576 577\nf 576 578 579\nf 578 575 580\nf 575 578 576\nf 581 582 559\nf 582 583 584\nf 583 581 579\nf 581 583 582\nf 585 586 569\nf 586 587 580\nf 587 585 584\nf 585 587 586\nf 578 583 579\nf 583 587 584\nf 587 578 580\nf 578 587 583\nf 553 572 554\nf 572 588 571\nf 588 553 556\nf 553 588 572\nf 568 585 569\nf 585 589 584\nf 589 568 571\nf 568 589 585\nf 582 557 559\nf 557 590 556\nf 590 582 584\nf 582 590 557\nf 588 589 571\nf 589 590 584\nf 590 588 556\nf 588 590 589\nf 591 47 46\nf 47 592 49\nf 592 591 593\nf 591 592 47\nf 54 594 52\nf 594 595 596\nf 595 54 49\nf 54 595 594\nf 597 598 599\nf 598 600 593\nf 600 597 596\nf 597 600 598\nf 592 595 49\nf 595 600 596\nf 600 592 593\nf 592 600 595\nf 63 601 61\nf 601 602 603\nf 602 63 66\nf 63 602 601\nf 604 605 606\nf 605 607 608\nf 607 604 603\nf 604 607 605\nf 609 72 52\nf 72 610 66\nf 610 609 608\nf 609 610 72\nf 602 607 603\nf 607 610 608\nf 610 602 66\nf 602 610 607\nf 611 612 563\nf 612 613 614\nf 613 611 615\nf 611 613 612\nf 616 617 599\nf 617 618 619\nf 618 616 614\nf 616 618 617\nf 620 621 606\nf 621 622 615\nf 622 620 619\nf 620 622 621\nf 613 618 614\nf 618 622 619\nf 622 613 615\nf 613 622 618\nf 594 609 52\nf 609 623 608\nf 623 594 596\nf 594 623 609\nf 605 620 606\nf 620 624 619\nf 624 605 608\nf 605 624 620\nf 617 597 599\nf 597 625 596\nf 625 617 619\nf 617 625 597\nf 623 624 608\nf 624 625 619\nf 625 623 596\nf 623 625 624\nf 92 626 90\nf 626 627 628\nf 627 92 95\nf 92 627 626\nf 629 630 631\nf 630 632 633\nf 632 629 628\nf 629 632 630\nf 634 102 101\nf 102 635 95\nf 635 634 633\nf 634 635 102\nf 627 632 628\nf 632 635 633\nf 635 627 95\nf 627 635 632\nf 636 637 577\nf 637 638 639\nf 638 636 640\nf 636 638 637\nf 641 642 643\nf 642 644 645\nf 644 641 639\nf 641 644 642\nf 646 647 631\nf 647 648 640\nf 648 646 645\nf 646 648 647\nf 638 644 639\nf 644 648 645\nf 648 638 640\nf 638 648 644\nf 649 118 61\nf 118 650 120\nf 650 649 651\nf 649 650 118\nf 124 652 101\nf 652 653 654\nf 653 124 120\nf 124 653 652\nf 655 656 643\nf 656 657 651\nf 657 655 654\nf 655 657 656\nf 650 653 120\nf 653 657 654\nf 657 650 651\nf 650 657 653\nf 630 646 631\nf 646 658 645\nf 658 630 633\nf 630 658 646\nf 642 655 643\nf 655 659 654\nf 659 642 645\nf 642 659 655\nf 652 634 101\nf 634 660 633\nf 660 652 654\nf 652 660 634\nf 658 659 645\nf 659 660 654\nf 660 658 633\nf 658 660 659\nf 562 611 563\nf 611 661 615\nf 661 562 565\nf 562 661 611\nf 621 662 606\nf 662 663 664\nf 663 621 615\nf 621 663 662\nf 665 567 569\nf 567 666 565\nf 666 665 664\nf 665 666 567\nf 661 663 615\nf 663 666 664\nf 666 661 565\nf 661 666 663\nf 601 649 61\nf 649 667 651\nf 667 601 603\nf 601 667 649\nf 656 668 643\nf 668 669 670\nf 669 656 651\nf 656 669 668\nf 671 604 606\nf 604 672 603\nf 672 671 670\nf 671 672 604\nf 667 669 651\nf 669 672 670\nf 672 667 603\nf 667 672 669\nf 637 575 577\nf 575 673 580\nf 673 637 639\nf 637 673 575\nf 586 674 569\nf 674 675 676\nf 675 586 580\nf 586 675 674\nf 677 641 643\nf 641 678 639\nf 678 677 676\nf 677 678 641\nf 673 675 580\nf 675 678 676\nf 678 673 639\nf 673 678 675\nf 662 671 606\nf 671 679 670\nf 679 662 664\nf 662 679 671\nf 668 677 643\nf 677 680 676\nf 680 668 670\nf 668 680 677\nf 674 665 569\nf 665 681 664\nf 681 674 676\nf 674 681 665\nf 679 680 670\nf 680 681 676\nf 681 679 664\nf 679 681 680\nf 156 682 154\nf 682 683 684\nf 683 156 159\nf 156 683 682\nf 685 686 687\nf 686 688 689\nf 688 685 684\nf 685 688 686\nf 690 166 165\nf 166 691 159\nf 691 690 689\nf 690 691 166\nf 683 688 684\nf 688 691 689\nf 691 683 159\nf 683 691 688\nf 692 693 694\nf 693 695 696\nf 695 692 697\nf 692 695 693\nf 698 699 700\nf 699 701 702\nf 701 698 696\nf 698 701 699\nf 703 704 687\nf 704 705 697\nf 705 703 702\nf 703 705 704\nf 695 701 696\nf 701 705 702\nf 705 695 697\nf 695 705 701\nf 706 184 183\nf 184 707 186\nf 707 706 708\nf 706 707 184\nf 190 709 165\nf 709 710 711\nf 710 190 186\nf 190 710 709\nf 712 713 700\nf 713 714 708\nf 714 712 711\nf 712 714 713\nf 707 710 186\nf 710 714 711\nf 714 707 708\nf 707 714 710\nf 686 703 687\nf 703 715 702\nf 715 686 689\nf 686 715 703\nf 699 712 700\nf 712 716 711\nf 716 699 702\nf 699 716 712\nf 709 690 165\nf 690 717 689\nf 717 709 711\nf 709 717 690\nf 715 716 702\nf 716 717 711\nf 717 715 689\nf 715 717 716\nf 718 546 548\nf 546 719 551\nf 719 718 720\nf 718 719 546\nf 558 721 559\nf 721 722 723\nf 722 558 551\nf 558 722 721\nf 724 725 726\nf 725 727 720\nf 727 724 723\nf 724 727 725\nf 719 722 551\nf 722 727 723\nf 727 719 720\nf 719 727 722\nf 576 728 577\nf 728 729 730\nf 729 576 579\nf 576 729 728\nf 731 732 733\nf 732 734 735\nf 734 731 730\nf 731 734 732\nf 736 581 559\nf 581 737 579\nf 737 736 735\nf 736 737 581\nf 729 734 730\nf 734 737 735\nf 737 729 579\nf 729 737 734\nf 738 739 694\nf 739 740 741\nf 740 738 742\nf 738 740 739\nf 743 744 726\nf 744 745 746\nf 745 743 741\nf 743 745 744\nf 747 748 733\nf 748 749 742\nf 749 747 746\nf 747 749 748\nf 740 745 741\nf 745 749 746\nf 749 740 742\nf 740 749 745\nf 721 736 559\nf 736 750 735\nf 750 721 723\nf 721 750 736\nf 732 747 733\nf 747 751 746\nf 751 732 735\nf 732 751 747\nf 744 724 726\nf 724 752 723\nf 752 744 746\nf 744 752 724\nf 750 751 735\nf 751 752 746\nf 752 750 723\nf 750 752 751\nf 626 234 90\nf 234 753 235\nf 753 626 628\nf 626 753 234\nf 239 754 237\nf 754 755 756\nf 755 239 235\nf 239 755 754\nf 757 629 631\nf 629 758 628\nf 758 757 756\nf 757 758 629\nf 753 755 235\nf 755 758 756\nf 758 753 628\nf 753 758 755\nf 245 759 183\nf 759 760 761\nf 760 245 248\nf 245 760 759\nf 762 763 764\nf 763 765 766\nf 765 762 761\nf 762 765 763\nf 767 254 237\nf 254 768 248\nf 768 767 766\nf 767 768 254\nf 760 765 761\nf 765 768 766\nf 768 760 248\nf 760 768 765\nf 769 636 577\nf 636 770 640\nf 770 769 771\nf 769 770 636\nf 647 772 631\nf 772 773 774\nf 773 647 640\nf 647 773 772\nf 775 776 764\nf 776 777 771\nf 777 775 774\nf 775 777 776\nf 770 773 640\nf 773 777 774\nf 777 770 771\nf 770 777 773\nf 754 767 237\nf 767 778 766\nf 778 754 756\nf 754 778 767\nf 763 775 764\nf 775 779 774\nf 779 763 766\nf 763 779 775\nf 772 757 631\nf 757 780 756\nf 780 772 774\nf 772 780 757\nf 778 779 766\nf 779 780 774\nf 780 778 756\nf 778 780 779\nf 693 738 694\nf 738 781 742\nf 781 693 696\nf 693 781 738\nf 748 782 733\nf 782 783 784\nf 783 748 742\nf 748 783 782\nf 785 698 700\nf 698 786 696\nf 786 785 784\nf 785 786 698\nf 781 783 742\nf 783 786 784\nf 786 781 696\nf 781 786 783\nf 728 769 577\nf 769 787 771\nf 787 728 730\nf 728 787 769\nf 776 788 764\nf 788 789 790\nf 789 776 771\nf 776 789 788\nf 791 731 733\nf 731 792 730\nf 792 791 790\nf 791 792 731\nf 787 789 771\nf 789 792 790\nf 792 787 730\nf 787 792 789\nf 759 706 183\nf 706 793 708\nf 793 759 761\nf 759 793 706\nf 713 794 700\nf 794 795 796\nf 795 713 708\nf 713 795 794\nf 797 762 764\nf 762 798 761\nf 798 797 796\nf 797 798 762\nf 793 795 708\nf 795 798 796\nf 798 793 761\nf 793 798 795\nf 782 791 733\nf 791 799 790\nf 799 782 784\nf 782 799 791\nf 788 797 764\nf 797 800 796\nf 800 788 790\nf 788 800 797\nf 794 785 700\nf 785 801 784\nf 801 794 796\nf 794 801 785\nf 799 800 790\nf 800 801 796\nf 801 799 784\nf 799 801 800\nf 290 591 46\nf 591 802 593\nf 802 290 292\nf 290 802 591\nf 598 803 599\nf 803 804 805\nf 804 598 593\nf 598 804 803\nf 806 297 296\nf 297 807 292\nf 807 806 805\nf 806 807 297\nf 802 804 593\nf 804 807 805\nf 807 802 292\nf 802 807 804\nf 612 808 563\nf 808 809 810\nf 809 612 614\nf 612 809 808\nf 811 812 813\nf 812 814 815\nf 814 811 810\nf 811 814 812\nf 816 616 599\nf 616 817 614\nf 817 816 815\nf 816 817 616\nf 809 814 810\nf 814 817 815\nf 817 809 614\nf 809 817 814\nf 818 311 310\nf 311 819 313\nf 819 818 820\nf 818 819 311\nf 317 821 296\nf 821 822 823\nf 822 317 313\nf 317 822 821\nf 824 825 813\nf 825 826 820\nf 826 824 823\nf 824 826 825\nf 819 822 313\nf 822 826 823\nf 826 819 820\nf 819 826 822\nf 803 816 599\nf 816 827 815\nf 827 803 805\nf 803 827 816\nf 812 824 813\nf 824 828 823\nf 828 812 815\nf 812 828 824\nf 821 806 296\nf 806 829 805\nf 829 821 823\nf 821 829 806\nf 827 828 815\nf 828 829 823\nf 829 827 805\nf 827 829 828\nf 547 830 548\nf 830 831 832\nf 831 547 550\nf 547 831 830\nf 833 834 835\nf 834 836 837\nf 836 833 832\nf 833 836 834\nf 838 552 554\nf 552 839 550\nf 839 838 837\nf 838 839 552\nf 831 836 832\nf 836 839 837\nf 839 831 550\nf 831 839 836\nf 840 841 842\nf 841 843 844\nf 843 840 845\nf 840 843 841\nf 846 847 848\nf 847 849 850\nf 849 846 844\nf 846 849 847\nf 851 852 835\nf 852 853 845\nf 853 851 850\nf 851 853 852\nf 843 849 844\nf 849 853 850\nf 853 843 845\nf 843 853 849\nf 854 561 563\nf 561 855 566\nf 855 854 856\nf 854 855 561\nf 573 857 554\nf 857 858 859\nf 858 573 566\nf 573 858 857\nf 860 861 848\nf 861 862 856\nf 862 860 859\nf 860 862 861\nf 855 858 566\nf 858 862 859\nf 862 855 856\nf 855 862 858\nf 834 851 835\nf 851 863 850\nf 863 834 837\nf 834 863 851\nf 847 860 848\nf 860 864 859\nf 864 847 850\nf 847 864 860\nf 857 838 554\nf 838 865 837\nf 865 857 859\nf 857 865 838\nf 863 864 850\nf 864 865 859\nf 865 863 837\nf 863 865 864\nf 866 363 362\nf 363 867 365\nf 867 866 868\nf 866 867 363\nf 370 869 368\nf 869 870 871\nf 870 370 365\nf 370 870 869\nf 872 873 874\nf 873 875 868\nf 875 872 871\nf 872 875 873\nf 867 870 365\nf 870 875 871\nf 875 867 868\nf 867 875 870\nf 378 876 310\nf 876 877 878\nf 877 378 381\nf 378 877 876\nf 879 880 881\nf 880 882 883\nf 882 879 878\nf 879 882 880\nf 884 387 368\nf 387 885 381\nf 885 884 883\nf 884 885 387\nf 877 882 878\nf 882 885 883\nf 885 877 381\nf 877 885 882\nf 886 887 842\nf 887 888 889\nf 888 886 890\nf 886 888 887\nf 891 892 874\nf 892 893 894\nf 893 891 889\nf 891 893 892\nf 895 896 881\nf 896 897 890\nf 897 895 894\nf 895 897 896\nf 888 893 889\nf 893 897 894\nf 897 888 890\nf 888 897 893\nf 869 884 368\nf 884 898 883\nf 898 869 871\nf 869 898 884\nf 880 895 881\nf 895 899 894\nf 899 880 883\nf 880 899 895\nf 892 872 874\nf 872 900 871\nf 900 892 894\nf 892 900 872\nf 898 899 883\nf 899 900 894\nf 900 898 871\nf 898 900 899\nf 808 854 563\nf 854 901 856\nf 901 808 810\nf 808 901 854\nf 861 902 848\nf 902 903 904\nf 903 861 856\nf 861 903 902\nf 905 811 813\nf 811 906 810\nf 906 905 904\nf 905 906 811\nf 901 903 856\nf 903 906 904\nf 906 901 810\nf 901 906 903\nf 841 886 842\nf 886 907 890\nf 907 841 844\nf 841 907 886\nf 896 908 881\nf 908 909 910\nf 909 896 890\nf 896 909 908\nf 911 846 848\nf 846 912 844\nf 912 911 910\nf 911 912 846\nf 907 909 890\nf 909 912 910\nf 912 907 844\nf 907 912 909\nf 876 818 310\nf 818 913 820\nf 913 876 878\nf 876 913 818\nf 825 914 813\nf 914 915 916\nf 915 825 820\nf 825 915 914\nf 917 879 881\nf 879 918 878\nf 918 917 916\nf 917 918 879\nf 913 915 820\nf 915 918 916\nf 918 913 878\nf 913 918 915\nf 902 911 848\nf 911 919 910\nf 919 902 904\nf 902 919 911\nf 908 917 881\nf 917 920 916\nf 920 908 910\nf 908 920 917\nf 914 905 813\nf 905 921 904\nf 921 914 916\nf 914 921 905\nf 919 920 910\nf 920 921 916\nf 921 919 904\nf 919 921 920\nf 830 718 548\nf 718 922 720\nf 922 830 832\nf 830 922 718\nf 725 923 726\nf 923 924 925\nf 924 725 720\nf 725 924 923\nf 926 833 835\nf 833 927 832\nf 927 926 925\nf 926 927 833\nf 922 924 720\nf 924 927 925\nf 927 922 832\nf 922 927 924\nf 739 928 694\nf 928 929 930\nf 929 739 741\nf 739 929 928\nf 931 932 933\nf 932 934 935\nf 934 931 930\nf 931 934 932\nf 936 743 726\nf 743 937 741\nf 937 936 935\nf 936 937 743\nf 929 934 930\nf 934 937 935\nf 937 929 741\nf 929 937 934\nf 938 840 842\nf 840 939 845\nf 939 938 940\nf 938 939 840\nf 852 941 835\nf 941 942 943\nf 942 852 845\nf 852 942 941\nf 944 945 933\nf 945 946 940\nf 946 944 943\nf 944 946 945\nf 939 942 845\nf 942 946 943\nf 946 939 940\nf 939 946 942\nf 923 936 726\nf 936 947 935\nf 947 923 925\nf 923 947 936\nf 932 944 933\nf 944 948 943\nf 948 932 935\nf 932 948 944\nf 941 926 835\nf 926 949 925\nf 949 941 943\nf 941 949 926\nf 947 948 935\nf 948 949 943\nf 949 947 925\nf 947 949 948\nf 682 454 154\nf 454 950 455\nf 950 682 684\nf 682 950 454\nf 459 951 457\nf 951 952 953\nf 952 459 455\nf 459 952 951\nf 954 685 687\nf 685 955 684\nf 955 954 953\nf 954 955 685\nf 950 952 455\nf 952 955 953\nf 955 950 684\nf 950 955 952\nf 466 956 464\nf 956 957 958\nf 957 466 469\nf 466 957 956\nf 959 960 961\nf 960 962 963\nf 962 959 958\nf 959 962 960\nf 964 475 457\nf 475 965 469\nf 965 964 963\nf 964 965 475\nf 957 962 958\nf 962 965 963\nf 965 957 469\nf 957 965 962\nf 966 692 694\nf 692 967 697\nf 967 966 968\nf 966 967 692\nf 704 969 687\nf 969 970 971\nf 970 704 697\nf 704 970 969\nf 972 973 961\nf 973 974 968\nf 974 972 971\nf 972 974 973\nf 967 970 697\nf 970 974 971\nf 974 967 968\nf 967 974 970\nf 951 964 457\nf 964 975 963\nf 975 951 953\nf 951 975 964\nf 960 972 961\nf 972 976 971\nf 976 960 963\nf 960 976 972\nf 969 954 687\nf 954 977 953\nf 977 969 971\nf 969 977 954\nf 975 976 963\nf 976 977 971\nf 977 975 953\nf 975 977 976\nf 490 866 362\nf 866 978 868\nf 978 490 492\nf 490 978 866\nf 873 979 874\nf 979 980 981\nf 980 873 868\nf 873 980 979\nf 982 497 496\nf 497 983 492\nf 983 982 981\nf 982 983 497\nf 978 980 868\nf 980 983 981\nf 983 978 492\nf 978 983 980\nf 887 984 842\nf 984 985 986\nf 985 887 889\nf 887 985 984\nf 987 988 989\nf 988 990 991\nf 990 987 986\nf 987 990 988\nf 992 891 874\nf 891 993 889\nf 993 992 991\nf 992 993 891\nf 985 990 986\nf 990 993 991\nf 993 985 889\nf 985 993 990\nf 994 510 464\nf 510 995 512\nf 995 994 996\nf 994 995 510\nf 516 997 496\nf 997 998 999\nf 998 516 512\nf 516 998 997\nf 1000 1001 989\nf 1001 1002 996\nf 1002 1000 999\nf 1000 1002 1001\nf 995 998 512\nf 998 1002 999\nf 1002 995 996\nf 995 1002 998\nf 979 992 874\nf 992 1003 991\nf 1003 979 981\nf 979 1003 992\nf 988 1000 989\nf 1000 1004 999\nf 1004 988 991\nf 988 1004 1000\nf 997 982 496\nf 982 1005 981\nf 1005 997 999\nf 997 1005 982\nf 1003 1004 991\nf 1004 1005 999\nf 1005 1003 981\nf 1003 1005 1004\nf 928 966 694\nf 966 1006 968\nf 1006 928 930\nf 928 1006 966\nf 973 1007 961\nf 1007 1008 1009\nf 1008 973 968\nf 973 1008 1007\nf 1010 931 933\nf 931 1011 930\nf 1011 1010 1009\nf 1010 1011 931\nf 1006 1008 968\nf 1008 1011 1009\nf 1011 1006 930\nf 1006 1011 1008\nf 956 994 464\nf 994 1012 996\nf 1012 956 958\nf 956 1012 994\nf 1001 1013 989\nf 1013 1014 1015\nf 1014 1001 996\nf 1001 1014 1013\nf 1016 959 961\nf 959 1017 958\nf 1017 1016 1015\nf 1016 1017 959\nf 1012 1014 996\nf 1014 1017 1015\nf 1017 1012 958\nf 1012 1017 1014\nf 984 938 842\nf 938 1018 940\nf 1018 984 986\nf 984 1018 938\nf 945 1019 933\nf 1019 1020 1021\nf 1020 945 940\nf 945 1020 1019\nf 1022 987 989\nf 987 1023 986\nf 1023 1022 1021\nf 1022 1023 987\nf 1018 1020 940\nf 1020 1023 1021\nf 1023 1018 986\nf 1018 1023 1020\nf 1007 1016 961\nf 1016 1024 1015\nf 1024 1007 1009\nf 1007 1024 1016\nf 1013 1022 989\nf 1022 1025 1021\nf 1025 1013 1015\nf 1013 1025 1022\nf 1019 1010 933\nf 1010 1026 1009\nf 1026 1019 1021\nf 1019 1026 1010\nf 1024 1025 1015\nf 1025 1026 1021\nf 1026 1024 1009\nf 1024 1026 1025";
